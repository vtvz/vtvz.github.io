<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en_GB"><generator uri="https://jekyllrb.com/" version="4.0.0">Jekyll</generator><link href="https://vtvz.me/feed.xml" rel="self" type="application/atom+xml" /><link href="https://vtvz.me/" rel="alternate" type="text/html" hreflang="en_GB" /><updated>2020-03-09T19:23:17+03:00</updated><id>https://vtvz.me/feed.xml</id><title type="html">Vitaly Zaslavsky – DevOps Engineer, who loves his job</title><subtitle>DevOps engineer's personal blog about everything. Notes on successes and failures in professional activities, about finding solutions to practical problems, and just about life.
</subtitle><author><name>Vitaly Zaslavsky</name><email>vtvz@pm.me</email></author><entry xml:lang="ru"><title type="html">Как прокормить целый офис в Петрозаводске</title><link href="https://vtvz.me/blog/cheap-food-for-team/" rel="alternate" type="text/html" title="Как прокормить целый офис в Петрозаводске" /><published>2020-02-12T00:00:00+03:00</published><updated>2020-02-12T00:00:00+03:00</updated><id>https://vtvz.me/blog/cheap-food-for-team</id><content type="html" xml:base="https://vtvz.me/blog/cheap-food-for-team/">&lt;p&gt;IT компании обычно кормят своих работников всякими печеньками, кофе, чаем и прочими плюшками.
Когда я пришел работать в Axmit, с этим были &lt;del&gt;не&lt;/del&gt;большие проблемы.
Часто случалось так, что из провизии оставалось только абсолютное ничего.
В лучшем случае был чай. В идеальном – упаковка чокопаек.&lt;/p&gt;

&lt;p&gt;Поэтому я выдвинул инициативу взять на себя обязанности “завхоза”,
менеджера по закупке провизии в офис.
За полтора года работы в Axmit я успел набраться опыта в этом деле и хочу поделиться с вами.&lt;/p&gt;

&lt;p&gt;Эта статья рассказывает о том, где в Петрозаводске можно закупаться провизией для своих ребят.&lt;/p&gt;

&lt;!--cut--&gt;

&lt;div class=&quot;alert alert-info&quot;&gt;
    &lt;p&gt;&lt;b&gt;Это не рекламный пост!&lt;/b&gt;&lt;/p&gt;
    &lt;p&gt;
        Даже если так может показаться. У меня не такая большая аудитория, чтобы ко мне приходили за рекламой.
        Все описанное здесь – мой опыт и находки.
        Делюсь с вами тем, что нашел для себя полезным.  
    &lt;/p&gt;
&lt;/div&gt;

&lt;h2 id=&quot;оффлайн-магазины&quot;&gt;Оффлайн-Магазины&lt;/h2&gt;

&lt;p&gt;Самое очевидное место, где можно покупать продукты – это магазины.
Всякие там Пятерочки, Магниты, Ленты, Сигмы и п.р.
Несмотря на доступные альтернативные варианты, в магазинах порой бывают очень хорошие скидки.
Например, не так давно я купил коробку (8 упаковок по 12 печенек в каждой) оригинального Orion ChocoPie по ~110 рублей.
Бывало и дешевле. Но это &lt;strong&gt;оригинальный&lt;/strong&gt; ChocoPie, который, следовательно, стоит ощутимо дороже другого.&lt;/p&gt;

&lt;p&gt;Один из магазинов, который хочется выделить, это &lt;strong&gt;FixPrice&lt;/strong&gt;.
Там не оригинальный ChocoPie продается по 55 рублей за упаковку 6 шт. в каждой.
Да, он не такой вкусный, но это хорошая альтернатива с хорошим соотношением цены и качества.&lt;/p&gt;

&lt;p&gt;В одно время я покупал по 60 упаковок по 20 каждого вида. Очень рассчитывал, что всем надоест. Но нет, не надоело.&lt;/p&gt;

&lt;p&gt;Есть еще “Светофор”. Стоит тоже посмотреть в его сторону, тем у кого есть машина.
У меня ее нет. Поэтому для меня этот вариант однозначно отпадает.&lt;/p&gt;

&lt;h2 id=&quot;ozon&quot;&gt;Ozon&lt;/h2&gt;

&lt;figure class=&quot;post-image&quot;&gt;
    &lt;img src=&quot;./ozon.png&quot; alt=&quot;Логотип Ozon&quot; /&gt;
&lt;/figure&gt;

&lt;p&gt;Не могу сказать, что &lt;a href=&quot;https://www.ozon.ru/&quot;&gt;Ozon&lt;/a&gt; очень выгодный магазин. Лично я в нем в офис ничего не заказывал.&lt;/p&gt;

&lt;p&gt;Но начальство там закупает кофе Lavazza, который по их словам там гораздо выгоднее, чем, скажем, когда-то в Спаре.&lt;/p&gt;

&lt;p&gt;Я думаю, что прежде, чем что-то покупать в больших количествах где-либо, стоит посмотреть цены в Озоне.
Ведь как в других магазинах, там бывают очень неплохие скидки.&lt;/p&gt;

&lt;h2 id=&quot;kdv&quot;&gt;KDV&lt;/h2&gt;

&lt;figure class=&quot;post-image post-image--left&quot;&gt;
    &lt;img src=&quot;./kdv.png&quot; alt=&quot;Логотип KDV&quot; /&gt;
&lt;/figure&gt;

&lt;p&gt;Есть такой замечательный интернет-магазин и по совместительству производитель &lt;a href=&quot;https://kdvonline.ru/&quot;&gt;KDV&lt;/a&gt;.
Они работают в 91 городе и сотрудничают не только с юридическими лицами и крупными магазинами,
но и обычными физ. лицами, как мы.&lt;/p&gt;

&lt;p&gt;Условия доставки очень простые: достаточно набрать товара на 300 рублей,
и продовольствие будет доставлено прямо в офис или домой.&lt;/p&gt;

&lt;p&gt;Из того, что я там заказывал:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Тараллини;&lt;/li&gt;
  &lt;li&gt;Вафли мягкие и голландские;&lt;/li&gt;
  &lt;li&gt;Шоколадные и злаковые батончики;&lt;/li&gt;
  &lt;li&gt;Гренки;&lt;/li&gt;
  &lt;li&gt;Арахис;&lt;/li&gt;
  &lt;li&gt;Мармелад;&lt;/li&gt;
  &lt;li&gt;Конфеты;&lt;/li&gt;
  &lt;li&gt;Печенья и вафли;&lt;/li&gt;
  &lt;li&gt;И т.д.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;В общем, очень хороший магазин, вкусная продукция и выгодные цены. Советую всем посмотреть.&lt;/p&gt;

&lt;h2 id=&quot;хрум-хрум&quot;&gt;Хрум-Хрум&lt;/h2&gt;

&lt;figure class=&quot;frame post-image&quot;&gt;
    &lt;img src=&quot;./hrum.jpg&quot; alt=&quot;Хрум-Хрум&quot; /&gt;
&lt;/figure&gt;

&lt;p&gt;Со временем я стал задумываться о том, что все это как-то вредно (не полезно, как минимум).
Поэтому начал смотреть в сторону чуть более правильного питания и полезных сладостей.&lt;/p&gt;

&lt;p&gt;Первый интернет магазин, с которым я познакомился – &lt;a href=&quot;https://hrumkaem.ru/&quot;&gt;Хрум-Хрум&lt;/a&gt;.
О нем мне рассказал мой коллега.&lt;/p&gt;

&lt;p&gt;Из недостатков хочется отметить, что стоимость продукции указывается не за какую-то весовую единицу (кг),
а за упаковку, в которой может быть любое количество грамм.
Это очень искажает восприятие и анализ реальной стоимости продукта.&lt;/p&gt;

&lt;p&gt;В итоге, в этом магазине я заказывал единожды.
Этого было достаточно, чтобы убедиться в том, что я точно не буду укладываться в выделенный мне месячный бюджет.&lt;/p&gt;

&lt;h2 id=&quot;без-упаковки&quot;&gt;“Без упаковки”&lt;/h2&gt;

&lt;figure class=&quot;frame post-image post-image--left&quot;&gt;
    &lt;img src=&quot;./bez.jpg&quot; alt=&quot;Без упаковки&quot; /&gt;
&lt;/figure&gt;

&lt;p&gt;&lt;a href=&quot;https://vk.com/bez_upakovki_ptz&quot;&gt;Этот магазин&lt;/a&gt; очень популярен среди эко-активистов, так как они продают продукцию исключительно в свою тару,
либо в биоразлагаемые бумажные пакеты, многоразовые пластиковые контейнеры или стеклянную тару.&lt;/p&gt;

&lt;p&gt;Почти все, что у них есть, продается на развес. С ассортиментом можно ознакомиться в &lt;a href=&quot;https://vk.com/bez_upakovki_ptz&quot;&gt;группе в ВК&lt;/a&gt;.
Советую посмотреть, хотя бы для расширения кругозора. Там продаются некоторые вещи, которые я никогда до этого не видел.&lt;/p&gt;

&lt;p&gt;Мне там нравится покупать гранолу и печеньки. Наташа (моя жена) очень любит тамошний зефир.
Иногда еще мы берем сливочный сыр и сушеные бананы.&lt;/p&gt;

&lt;p&gt;В этом магазине я также заказывал только один раз. Там все гораздо дешевле, а цены прозрачнее.
Для обычных потребителей это очень удобный магазин, позволяющий купить ровно столько, сколько нужно.&lt;/p&gt;

&lt;p&gt;Из недостатков хочется отметить то, что там работает ооочееень мееедлееенныыый персонал.
Если в обычном магазине покупка вам обойдется в 5 минут, тот тут уйдут все 15.
И это в том случае, если там нет очереди. Но если перед вами есть хоть один человек…
Короче, если у вас не много времени, лучше просто развернуться и уйти.&lt;/p&gt;

&lt;h2 id=&quot;ecogreen&quot;&gt;Ecogreen&lt;/h2&gt;

&lt;figure class=&quot;frame&quot;&gt;
    &lt;img src=&quot;./ecogreen.jpg&quot; alt=&quot;Ecogreen&quot; /&gt;
&lt;/figure&gt;

&lt;p&gt;Герой этой статьи – магазин &lt;a href=&quot;https://vk.com/suxofrukti_petrozavodsk&quot;&gt;Ecogreen&lt;/a&gt;.
Стоит сказать сразу, что почти весь товар продается пакетами минимум пол кило,
а бесплатная доставка осуществляется от 2т. рублей.
Это значит, что обычному потребителю не очень-то и удобно закупаться в этом магазине.
Но для массовых закупок в офис, чтобы прокормить ~20 человек это самый оптимальный вариант.&lt;/p&gt;

&lt;p&gt;Также открывается возможность покупать товары для себя вместе с тем, что закупается в офис.&lt;/p&gt;

&lt;p&gt;Для ребят в офис я покупаю:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Орешки (в основном смеси);&lt;/li&gt;
  &lt;li&gt;Банановые чипсы;&lt;/li&gt;
  &lt;li&gt;Цукаты;&lt;/li&gt;
  &lt;li&gt;Сушеные и вяленые фрукты;&lt;/li&gt;
  &lt;li&gt;Банановые чипсы;&lt;/li&gt;
  &lt;li&gt;Имбирь в сахаре;&lt;/li&gt;
  &lt;li&gt;т.д.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;По началу ребята уничтожали двухнедельный запас менее чем за 1.5 недели,
а оставшиеся несколько дней пили пустой кофе/чай.
Но сейчас, вероятно, организм получил все необходимые витамины, и скорость съедания припасов приубавилась.&lt;/p&gt;

&lt;p&gt;Для себя домой я иногда беру:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Орешки;&lt;/li&gt;
  &lt;li&gt;Финики;&lt;/li&gt;
  &lt;li&gt;Банановые чипсы;&lt;/li&gt;
  &lt;li&gt;Семечки (для птиц в кормушку);&lt;/li&gt;
  &lt;li&gt;Зелень (укроп и петрушка), шпинат, мята;&lt;/li&gt;
  &lt;li&gt;Нут, фасоль, маш.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Обязательно изучите ассортимент в этом магазине.
Конечно, не у каждого есть возможность единоразово выложить 2 тысячи рублей сразу.
Но, во-первых, не обязательно закупаться одному – уговорите друга/соседа/родственника и закажите вместе.
А во-вторых, продаваемый там товар обычно долгого срока хранения.
Может быть есть смысл закупаться в начале месяца и потом постепенно уничтожать припасы.&lt;/p&gt;

&lt;h2 id=&quot;выводы&quot;&gt;Выводы&lt;/h2&gt;

&lt;p&gt;В итоге, мне удалось уложиться в выделенный мне месячный бюджет и перевести весь наш офис на полезные сладости.
Опрос показал, что большинство за отказ от сладкого. Но есть и те, кто “готов есть ChocoPie всю оставшуюся жизнь”.
Но им придется кушать хорошую пищу :grin:&lt;/p&gt;

&lt;p&gt;От себя скажу, что переход на орешки и финики помог уйти от непомерного употребления сладостей
и уменьшить объемы съедаемых каллорий.
Орехами и финиками быстро наедаешься, тогда как я мог съедать всю упаковку чокопаек в качестве завтрака.&lt;/p&gt;

&lt;p&gt;Я прекрасно понимаю, что орехи – это дорого.
Но почему бы не провести эксперимент. Один месяц покупать обычные сладости: печеньки, конфеты, и т.п.
А потом – орехи и сухофрукты. Сначала дайте полезностям фору – позвольте организму пару недель наесться.
А потом посчитайте, сколько денег уйдет на то и другое. И тогда делайте выводы – стоит ли оно того (стоит) :fox:&lt;/p&gt;</content><author><name>Vitaly Zaslavsky</name><email>vtvz@pm.me</email></author><category term="Еда" /><category term="Магазины" /><summary type="html">IT компании обычно кормят своих работников всякими печеньками, кофе, чаем и прочими плюшками. Когда я пришел работать в Axmit, с этим были небольшие проблемы. Часто случалось так, что из провизии оставалось только абсолютное ничего. В лучшем случае был чай. В идеальном – упаковка чокопаек. Поэтому я выдвинул инициативу взять на себя обязанности “завхоза”, менеджера по закупке провизии в офис. За полтора года работы в Axmit я успел набраться опыта в этом деле и хочу поделиться с вами. Эта статья рассказывает о том, где в Петрозаводске можно закупаться провизией для своих ребят.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://vtvz.me/blog/cheap-food-for-team/cover.jpg" /><media:content medium="image" url="https://vtvz.me/blog/cheap-food-for-team/cover.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry xml:lang="ru"><title type="html">Большие перемены</title><link href="https://vtvz.me/blog/big-changes/" rel="alternate" type="text/html" title="Большие перемены" /><published>2020-02-05T00:00:00+03:00</published><updated>2020-02-05T00:00:00+03:00</updated><id>https://vtvz.me/blog/big-changes</id><content type="html" xml:base="https://vtvz.me/blog/big-changes/">&lt;p&gt;За последние несколько месяцев на моем сайте произошли тотальные изменения.
Он по-прежнему темный и на фоне лис &lt;span class=&quot;text-muted&quot;&gt;(не енот!)&lt;/span&gt;,
но после последних обновлений он никогда не будет прежним. Это что-то вроде отчетного поста о моих трудах и результатах.&lt;/p&gt;

&lt;p&gt;Там совсем немного букв :blush:&lt;/p&gt;

&lt;!--cut--&gt;

&lt;h2 id=&quot;переезд&quot;&gt;Переезд&lt;/h2&gt;

&lt;p&gt;Домен &lt;code class=&quot;highlighter-rouge&quot;&gt;vtvz.ru&lt;/code&gt; служил мне верой и правдой более пяти лет.
Но настало время перемен. 
Причин сменить доменное имя немного, но одна из них – он не интернациональный.&lt;/p&gt;

&lt;p&gt;Проблема ли это? В общем-то нет.
Но я хотел что-то такое, что обращает внимание не на страну, а на самого автора (то есть меня).&lt;/p&gt;

&lt;p&gt;Выбирать долго не пришлось.
Все национальные домены были отброшены сразу.
Хоть доступных вариантов интернациональных имен сотни, выбор пал на &lt;code class=&quot;highlighter-rouge&quot;&gt;.me&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Потому что:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Он короткий;&lt;/li&gt;
  &lt;li&gt;Явно указывает на принадлежность сайта какому-то конкретному лицу;&lt;/li&gt;
  &lt;li&gt;Он очень пересекается с адресом моей личной электронной почты (а именно &lt;a href=&quot;mailto:vtvz@pm.me&quot;&gt;vtvz@pm.me&lt;/a&gt;)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Старый домен все еще живой. С него будут осуществляться все перенаправления на новый сайт.
(vtvz.ru/blog &lt;i class=&quot;fas fa-chevron-right&quot;&gt;&lt;/i&gt; vtvz.me/blog)&lt;/p&gt;

&lt;p&gt;Переезд затронул не только мой сайт, но еще и некоторые другие сервисы:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://vk.com/vtvz_me&quot;&gt;https://vk.com/vtvz_me&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://fb.com/vtvz.me&quot;&gt;https://fb.com/vtvz.me&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://t.me/vtvz_me&quot;&gt;https://t.me/vtvz_me&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://twitter.com/vtvz_me&quot;&gt;https://twitter.com/vtvz_me&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Сменить удалось далеко не все, например &lt;a href=&quot;https://habr.com/ru/users/vtvz_ru/&quot;&gt;Хабр&lt;/a&gt; не получилось,
но основное обновить все же удалось.&lt;/p&gt;

&lt;p&gt;Вероятно, по сети еще долго будут гулять битые ссылки на старые профили.&lt;/p&gt;

&lt;h2 id=&quot;перевод-на-английский&quot;&gt;Перевод на английский&lt;/h2&gt;

&lt;p&gt;Если бы я был блогером-бухгалтером или юристом, то не имело бы большого смысла выходить за рамки русского языка.
Но яжпрограммист! Моя деятельность не заточенá границами одной страны.
Поэтому, некоторую часть сайта было решено перевести на английский язык, как язык большинства разработчиков.&lt;/p&gt;

&lt;p&gt;В скором будущем, если позволят обстоятельства, некоторые статьи будут выходить сразу на двух языках.
В основном это будут короткие посты, решающие какую-то небольшую задачу,
с которой я столкнулся в своей профессиональной деятельности – самый сок для поисковиков.&lt;/p&gt;

&lt;h2 id=&quot;резюме&quot;&gt;Резюме&lt;/h2&gt;

&lt;p&gt;Вот подумал я, а не составить ли мне резюме. Ну знаете, всякое бывает.
А какое лучшее место для размещения резюме, как не собственный сайт (яжпрограммист)? Решено – сделано.&lt;/p&gt;

&lt;p&gt;Хоть оно и расположено на главной странице, для него в меню появился новый пункт, который так и называется “CV”.&lt;/p&gt;

&lt;p&gt;В этом резюме, как мне кажется, есть все необходимое:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Краткое повествование текущей профессиональной и около-профессиональной деятельности;&lt;/li&gt;
  &lt;li&gt;Немного о личной жизни;&lt;/li&gt;
  &lt;li&gt;Полная история карьеры, включая приобретенные навыки на каждом рабочем месте;&lt;/li&gt;
  &lt;li&gt;И общая таблица навыков с примечаниями.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Пожалуй, это самое глобальное обновление на сайте после запуска блога.
На вылизывание этой части ушло несколько дней.
Но результатом я очень доволен.&lt;/p&gt;

&lt;p&gt;Как вы думаете, увеличит ли это шансы быть замеченным?
Не уверен, что это когда-либо сыграет решающую роль.
Но разве только факт существования этого сайта не подтверждает мои навыки? :grin:&lt;/p&gt;

&lt;h2 id=&quot;мелочи&quot;&gt;Мелочи&lt;/h2&gt;

&lt;p&gt;Помимо этих глобальных обновлений, сделана еще пачка мелочей:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;На главной странице среди контактов появился Telegram, как самый приоритетный способ связи.
Кстати, на узких экранах пропадает ссылка в ВК. Потому 5 кружочков красивее, чем 6.&lt;/li&gt;
  &lt;li&gt;В блоге, рядом с категориями циферки убраны в аккуратные бейджики.&lt;/li&gt;
  &lt;li&gt;Обновился &lt;a href=&quot;https://fontawesome.com/&quot;&gt;FontAwesome&lt;/a&gt; пак иконок до последней версии. И все иконки на сайте были заменены на них.
Кстати, те кто разбираются, посмотрите, как сделаны звездочки в последнем разделе моего резюме &lt;span class=&quot;text-muted&quot;&gt;(proud of myself)&lt;/span&gt;&lt;/li&gt;
  &lt;li&gt;В качестве генератора сайтов я использую &lt;a href=&quot;https://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt;. Дак вот, он был обновлен до самой последней версии.
Зачем? Просто так :blush:&lt;/li&gt;
  &lt;li&gt;Было выпилено огромное количество неиспользуемых стилей и скриптов,
которые замедляли загрузку страницы и производительность в целом.
Еще много осталось, но уже все гораздо лучше.&lt;/li&gt;
  &lt;li&gt;В качестве шрифта для кусков кода теперь используется &lt;a href=&quot;https://github.com/tonsky/FiraCode&quot;&gt;FiraCode&lt;/a&gt; с лигатурами.
Очень рекомендую использовать его в качестве шрифта для вашей IDE (или &lt;a href=&quot;https://www.jetbrains.com/lp/mono/&quot;&gt;этот&lt;/a&gt;).
Только посмотрите, как с этим шрифтом ‘!=’ превращается в &lt;code class=&quot;highlighter-rouge&quot;&gt;!=&lt;/code&gt;, ‘&amp;gt;=’ – в &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;gt;=&lt;/code&gt;, а ‘-&amp;gt;’ – в &lt;code class=&quot;highlighter-rouge&quot;&gt;-&amp;gt;&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Также, анимация на главной странице с контактами будет запускаться вместе с исчезновением индикатора загрузки, а не до.&lt;/li&gt;
  &lt;li&gt;Появился футер с копирайтом на каждой странице.&lt;/li&gt;
  &lt;li&gt;Пропал футер на главной странице с номером телефона и почтой, но зато появилось приглашение листнуть вниз.&lt;/li&gt;
  &lt;li&gt;Добавлена ссылка на последнюю статью в блоге на главный экран.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;Мой уютный бложек с каждым обновлением принимает все более солидные формы
и превращается не просто в сайт-визитку, но в целую единицу в моем портфолио.&lt;/p&gt;

&lt;p&gt;Каковы дальнейшие планы? Я хочу сделать главную страницу красивой не только в браузере, но и в печати.
Чтобы при необходимости можно было легко отправить резюме PDF-файликом без дополнительного ручного форматирования.
Возможно, будут еще мелкие улучшения. Но в целом результатом я очень доволен. А что думаете вы? :blush:&lt;/p&gt;</content><author><name>Vitaly Zaslavsky</name><email>vtvz@pm.me</email></author><category term="Блог" /><category term="Веб-разработка" /><category term="Обновления" /><summary type="html">За последние несколько месяцев на моем сайте произошли тотальные изменения. Он по-прежнему темный и на фоне лис (не енот!), но после последних обновлений он никогда не будет прежним. Это что-то вроде отчетного поста о моих трудах и результатах. Там совсем немного букв :blush:</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://vtvz.me/blog/big-changes/cover.jpg" /><media:content medium="image" url="https://vtvz.me/blog/big-changes/cover.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry xml:lang="ru"><title type="html">Постигая Kubernetes — мощь и величие</title><link href="https://vtvz.me/blog/comprehending-kubernetes/" rel="alternate" type="text/html" title="Постигая Kubernetes — мощь и величие" /><published>2020-01-12T00:00:00+03:00</published><updated>2020-01-12T00:00:00+03:00</updated><id>https://vtvz.me/blog/comprehending-kubernetes</id><content type="html" xml:base="https://vtvz.me/blog/comprehending-kubernetes/">&lt;p&gt;Kubernetes (куб, k8s) во истину огромный комбайн, который очень много что умеет.
И не даром его так любят и так боятся.
Когда начинаешь осваивать какую-то технологию, пытаешься начать с чего-то малого.
Но где то малое у Kubernetes, с чего нужно начать? Я бы начал с обзора основных его возможностей.
О чем и пойдет речь в этой статье.&lt;/p&gt;

&lt;!--cut--&gt;

&lt;p&gt;Прежде хочу обратить внимание на то, что никакая из описанных здесь возможностей, по моему, не является основной.
Весь функционал очень сильно пересекается и взаимозависим от остального.&lt;/p&gt;

&lt;h2 id=&quot;запуск-сервисов-и-мониторинг&quot;&gt;Запуск сервисов и мониторинг&lt;/h2&gt;

&lt;p&gt;K8S – это оркестратор контейнеров. Его обязанность – запускать ПО, укутанное в контейнер, и следить за его состоянием.&lt;/p&gt;

&lt;p&gt;Куб может:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Запустить сервис;&lt;/li&gt;
  &lt;li&gt;Остановить сервис;&lt;/li&gt;
  &lt;li&gt;Переподнять умерший сервис;&lt;/li&gt;
  &lt;li&gt;Направлять трафик только на те сервисы, которые уже готовы его принять;&lt;/li&gt;
  &lt;li&gt;И наоборот – ограничить трафик на те процессы, которые уже не могут его принять;&lt;/li&gt;
  &lt;li&gt;Проверять сервис на его жизнеспособность и убить его, если он превратился в зомби;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Реальные кейсы:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Сервер с NodeJS требующий на инициализацию около 1.5 минут.
Пока сервис не готов, на него нельзя направлять трафик, иначе будет 503 или какой-нибудь timeout.&lt;/li&gt;
  &lt;li&gt;Тоже сервер с NodeJS, но где-то подтекает память.
Со временем процесс съедает всю доступную ему память и превращается в зомби.
То есть процесс живой, но он ничего не делает, обработка http запросов тоже сломана.
K8S со своей стороны закрывает трафик на этот сервис, убивает его и поднимает новый.
Это не идеальное решение – протечку все еще нужно найти и залатать.
Но это решение лучше, чем совсем уйти в оффлайн.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;как-это-работает&quot;&gt;Как это работает&lt;/h3&gt;

&lt;p&gt;У куба в БД хранится текущее состояние системы и желаемое.
В случае, если какой-то сервис погибает, куб пытается его поднять снова. И снова. И снова.
Этим он похож на обычный супервизор.&lt;/p&gt;

&lt;p&gt;Также у куба есть 2 вида проверки (их больше, но эти основные):&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Проверка готовности (&lt;a href=&quot;https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes&quot;&gt;readiness&lt;/a&gt;) отвечает за возможность сервиса принять на себя трафик.
Когда сервис отвечает успехом, куб начинает направлять туда трафик.
И наоборот – как только проверка начинает проваливаться, трафик на сервис ограничивается.&lt;/li&gt;
  &lt;li&gt;Проверка жизнеспособности (&lt;a href=&quot;https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-a-liveness-http-request&quot;&gt;liveness&lt;/a&gt;) отвечает на вопрос “Ты живой?”.
Сервис вполне может быть живым, но не готовым.
Но если эта проверка проваливается (один или несколько раз; все зависит от настроек),
куб сначала просит сервис умереть самостоятельно (graceful shutdown),
а потом, через достаточно короткое время, убивает его.
Что в свою очередь инициирует запуск этого сервиса вновь.&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;frame&quot;&gt;
  &lt;img src=&quot;./rolling-update.png&quot; alt=&quot;Стратегия деплоя - RollingUpdate&quot; /&gt;
&lt;/figure&gt;

&lt;h2 id=&quot;деплой&quot;&gt;Деплой&lt;/h2&gt;

&lt;p&gt;Пожалуй, это одна из самых приятных фич, которую предоставляет куб.
И вот в чем соль. Представьте, что у вас есть приложение, и вам нужно выкатить новую версию на production.
Задача в том, чтобы не допустить ни миллисекунды downtime’а.
В PHP это сделать достаточно просто:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Загрузить код на сервер;&lt;/li&gt;
  &lt;li&gt;Переключить симлинк на папку с новым кодом;&lt;/li&gt;
  &lt;li&gt;Перезапустить сервер на всякий случай.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Но что делать, если у вас нода? А если на разогрев приложения уходит более двух минут?
А еще и не один сервер, а несколько?
Задача эта типовая, и решения бывает разные. Но вот, что можно сделать с помощью k8s.&lt;/p&gt;

&lt;p&gt;У куба есть отдельная сущность, которая так и называется &lt;a href=&quot;https://kubernetes.io/docs/concepts/workloads/controllers/deployment/&quot;&gt;Deployment&lt;/a&gt;.
Это дает возможность постепенного накатывания новой версии приложения.
В зависимости от настроек поведение будет разным, но вот один из сценариев:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Куб создает контейнер с новым приложением;&lt;/li&gt;
  &lt;li&gt;Дожидается его готовности;&lt;/li&gt;
  &lt;li&gt;Убивает контейнер со старым кодом.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Заметьте, как гармонично деплой работает с инструментами мониторинга (liveness &amp;amp; readiness probes).
Если в прод попадет заведомо сломанное приложение, куб остановит процесс накатывания и оставит код на старой версии.
Про существующие стратегии деплоя можно почитать &lt;a href=&quot;https://habr.com/ru/company/flant/blog/471620/&quot;&gt;тут&lt;/a&gt;.&lt;/p&gt;

&lt;figure class=&quot;frame&quot;&gt;
  &lt;img src=&quot;./load-balancing.png&quot; alt=&quot;Балансировка нагрузки&quot; /&gt;
&lt;/figure&gt;

&lt;h2 id=&quot;балансировка-распределение-и-масштабирование&quot;&gt;Балансировка, распределение и масштабирование&lt;/h2&gt;

&lt;p&gt;Каждый отдельный сервис может иметь несколько реплик себя. Например, backend.
В этом случае куб, при правильной настройке конечно, распределяет нагрузку между сервисами,
что в некоторой степени гарантирует стабильность компонентов.
Для kubernetes совершенно не важно, сколько реплик имеет сервис.
Он не завязывается на конкретных экземплярах, но может динамически подключаться к новым и отвязываться от удаленных.&lt;/p&gt;

&lt;p&gt;Что решает проблему масштабирования: можно увеличивать и уменьшать количество реплик
без необходимости делать что-либо вручную – куб сам все подтянет.&lt;/p&gt;

&lt;p&gt;Таким образом, благодаря компонентной архитектуре, в k8s есть отдельная сущность &lt;a href=&quot;https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/&quot;&gt;Horizontal Pod Autoscaler&lt;/a&gt;,
которая и отвечает за масштабирование компонентов в обе стороны – и на увеличение, и на уменьшение.&lt;/p&gt;

&lt;p&gt;Также, хостинги, предоставляющие куб как сервис, могут автоматически подключать и удалять
новые сервера в зависимости от нагрузки. Что, следовательно, может неплохо так сэкономить денег.&lt;/p&gt;

&lt;p&gt;Помимо обычной балансировки и масштабирования, которые выполняют исключительно свои задачи,
иногда нужно не только увеличить количество экземпляров,
но и как можно более равномерно распределить их по серверам в кластере.
Или наоборот – группировать некоторые компоненты в пределах одного сервера для уменьшения сетевых задержек.
Для этой цели существует т.н. &lt;a href=&quot;https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity&quot;&gt;Affinity and anti-affinity&lt;/a&gt; (не знаю, как правильно перевести).
Тут как раз и задаются правила выбора ноды.&lt;/p&gt;

&lt;figure class=&quot;frame&quot;&gt;
  &lt;img src=&quot;./resources.jpg&quot; alt=&quot;Распределение ресурсов&quot; /&gt;
&lt;/figure&gt;

&lt;h2 id=&quot;менеджмент-ресурсов&quot;&gt;Менеджмент ресурсов&lt;/h2&gt;

&lt;p&gt;Куб умеет:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Гарантировать (RAM, CPU) доступность ресурсов сервисам.&lt;/li&gt;
  &lt;li&gt;Ограничивать ресурсы сервисам.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Реальные кейсы:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Есть тестовый кластер, где крутятся более 10 различных проектов.
На этапе разработки всегда что-то может пойти не так, и некоторые процессы начинают подтекать или выедать весь процессор.
Куб может ограничивать использование процессора (например, не более 20% одного ядра) и памяти (убивая при этом процесс).&lt;/li&gt;
  &lt;li&gt;В продовой среде может быть несколько серверов (нод в терминологии k8s) и сервисов.
Грамотное распределение ресурсов будет гарантировать,
что 2 емких по памяти или процессору процесса не будут лежать вместе и бороться за одни и те же ресурсы.
Куб будет гарантировать те ресурсы, которые необходимы этому сервису.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;как-это-работает-1&quot;&gt;Как это работает&lt;/h3&gt;

&lt;p&gt;У куба есть 2 способа распределения ресурсов:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Лимиты (limits) отвечают за ограничения. 
Если сервис начинает потреблять больше позволенного,
то куб начинает ограничивать потребление ЦПУ и убивает в случае оперативной памяти&lt;/li&gt;
  &lt;li&gt;Заявки (requests) – это запрашиваемые сущностью ресурсы.
Указывая кубу в заявках количество процессорного времени и оперативной памяти,
мы даем ему возможность более обдуманно выбирать сервер, на котором сервис будет чувствовать наиболее комфортно.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;И на самом деле это еще не все. Можно указывать квоту на целое пространство имен,
ограничивая при этом, суммарное ресурсопотребление.
Можно указать максимально возможное значение по лимитам и заявкам для каждого отдельного пода.&lt;/p&gt;

&lt;p&gt;В общем, про это можно почитать &lt;a href=&quot;https://cloud.google.com/blog/products/gcp/kubernetes-best-practices-resource-requests-and-limits&quot;&gt;тут&lt;/a&gt; и посмотреть &lt;a href=&quot;https://www.youtube.com/watch?v=10ZR-fbyuSY&quot;&gt;здесь&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Выбор ресурсов также влияет на приоритизацию сервисов в случае проблем – кто из них будет убит первым.
Почитать можно &lt;a href=&quot;https://kubernetes.io/docs/tasks/configure-pod-container/quality-service-pod/&quot;&gt;тут&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;выводы&quot;&gt;Выводы&lt;/h2&gt;

&lt;p&gt;Kubernetes – не просто модное словечко или хайповая вещица, которая умрет через несколько лет.
Это очень (очень) мощный и удобный инструмент. Я до сей поры восхищаюсь творением Google.
Работа с ним доставляет мне массу позитивных эмоций.&lt;/p&gt;

&lt;p&gt;Да, он пугает своими размерами и возможностями.
Я тоже долго не осмеливался подступить к нему.
В этом мне очень помогла книга &lt;a href=&quot;https://www.ozon.ru/context/detail/id/148388621/&quot;&gt;Kubernetes в действии (Лукша Марко)&lt;/a&gt;.
Качественная подача материала, читается легко и хороший перевод. &lt;strong&gt;Очень советую&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Всё описанное в этой статье – только лишь верхушка айсберга.
Еще есть задачи, сron-задачи, демоны, сервисы с состоянием, подключаемые хранилища, конфигурации и секреты и т.д.
Но все это приходит с опытом и потребностями.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Если есть вопросы, внизу есть блок с комментариями и ссылками на соц. сети.
Для меня важна любая обратная связь :blush:&lt;/p&gt;</content><author><name>Vitaly Zaslavsky</name><email>vtvz@pm.me</email></author><category term="Kubernetes" /><category term="Docker" /><summary type="html">Kubernetes (куб, k8s) во истину огромный комбайн, который очень много что умеет. И не даром его так любят и так боятся. Когда начинаешь осваивать какую-то технологию, пытаешься начать с чего-то малого. Но где то малое у Kubernetes, с чего нужно начать? Я бы начал с обзора основных его возможностей. О чем и пойдет речь в этой статье.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://vtvz.me/blog/comprehending-kubernetes/cover.jpg" /><media:content medium="image" url="https://vtvz.me/blog/comprehending-kubernetes/cover.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry xml:lang="ru"><title type="html">Калькулятор расходов для ИП по УСН Доходы</title><link href="https://vtvz.me/blog/entrepreneur-calculator/" rel="alternate" type="text/html" title="Калькулятор расходов для ИП по УСН Доходы" /><published>2020-01-08T00:00:00+03:00</published><updated>2020-01-08T00:00:00+03:00</updated><id>https://vtvz.me/blog/entrepreneur-calculator</id><content type="html" xml:base="https://vtvz.me/blog/entrepreneur-calculator/">&lt;p&gt;Многие знают, что я индивидуальный предприниматель. И все знают, что я программист.
А это значит, что любая работа поддающаяся автоматизации должна быть автоматизирована.
Поэтому я решил создать этот калькулятор. Как для своего удобства, так и во благо других.&lt;/p&gt;

&lt;!--cut--&gt;

&lt;p&gt;Если ты ИП по УСН по доходам, то этот инструмент будет очень кстати.
Его цель – высчитать чистый доход с учетом всех основных текущих и будущих затрат.
В эти затраты входят: банковская комиссия, страховые выплаты (ПФР и ФФОМС) и непосредственно сам налог.&lt;/p&gt;

&lt;h2 id=&quot;как-это-работает&quot;&gt;Как это работает&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;Вбиваете ваш доход за месяц или год в строку “Доход”;&lt;/li&gt;
  &lt;li&gt;В строке “Чистая прибыль” указана сумма, которую можно безопасно вывести;&lt;/li&gt;
  &lt;li&gt;Остаток нужно отложить на отдельный счет или оставить на расчетном счете вашего ИП 
– эти деньги пригодятся для оплаты страховых взносов и налогов;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Подобный расчет работает только в том случае, если вы выплачиваете ПФР и ФФОМС &lt;strong&gt;ежеквартально&lt;/strong&gt;.
Таким образом можно очень сильно уменьшить или даже исключить налог по УСН.
До тех пор, пока ежемесячный доход в 2020 году составит не более 45,000 рублей,
не придется платить &lt;strong&gt;ни рубля налогов&lt;/strong&gt; – только страховые взносы!&lt;/p&gt;

&lt;h2 id=&quot;для-чего-это-нужно&quot;&gt;Для чего это нужно&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;Этим можно пользоваться как инструментом бухгалтерии для расчета всех необходимых выплат;&lt;/li&gt;
  &lt;li&gt;Можно оценить чистый доход от сделки или выполненных работ;&lt;/li&gt;
  &lt;li&gt;Или наоборот – подогнать стоимость сделки, чтобы выхлоп был не меньше желаемого;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;как-пользоваться&quot;&gt;Как пользоваться&lt;/h2&gt;

&lt;p&gt;На текущий момент функциональность калькулятора не обширная, и я сомневаюсь,
что буду делать с ним что-то еще помимо обновления цифр по годам. Но вот что есть уже сейчас:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Выберите год. Вероятно, год меньше 2020-го будет уже не актуальным,
но если нужно посчитать страховые взносы за предыдущий год, можно выбрать и 2019.&lt;/li&gt;
  &lt;li&gt;Пункт “Оплата расчетного счета в месяц” позволяет выбрать тарифный план вашего банка.
Я, например, плачу 1% от всего моего дохода, поэтому я выбираю пункт “Процент от дохода”.
Если вы платите фиксированную сумму, выберите соответствующий пункт.&lt;/li&gt;
  &lt;li&gt;Поле “Количество” определяет число, применимое к вашему тарифному плану:
    &lt;ul&gt;
      &lt;li&gt;В случае “Процент от дохода” – комиссия в процентах от дохода;&lt;/li&gt;
      &lt;li&gt;А в “Фиксированная абонентская плата” – ежемесячная комиссия в рублях за использование расчетного счета.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;калькулятор&quot;&gt;Калькулятор&lt;/h2&gt;

&lt;div id=&quot;calculator-container&quot;&gt;&lt;/div&gt;

&lt;script&gt;
window.callOnReady.push(
    function() {
        main.calculator(document.getElementById('calculator-container'));
    }
);
&lt;/script&gt;

&lt;h2 id=&quot;послесловие&quot;&gt;Послесловие&lt;/h2&gt;

&lt;p&gt;Я очень надеюсь, что нигде не накосячил. Сначала это все рассчитывалось в обычной Excel таблице.
Расчеты там и тут сходятся. Да и в мобильной бухгалтерии все гладко.
Но если я что-то сделал не так – пожалуйста, поправьте меня.
Внизу есть блок с комментариями – пишите ваши замечания и пожелания.&lt;/p&gt;

&lt;p&gt;Спасибо за внимание :blush:&lt;/p&gt;</content><author><name>Vitaly Zaslavsky</name><email>vtvz@pm.me</email></author><category term="ИП" /><category term="Бизнес" /><category term="Налоги" /><category term="УСН" /><summary type="html">Многие знают, что я индивидуальный предприниматель. И все знают, что я программист. А это значит, что любая работа поддающаяся автоматизации должна быть автоматизирована. Поэтому я решил создать этот калькулятор. Как для своего удобства, так и во благо других.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://vtvz.me/blog/entrepreneur-calculator/cover.jpg" /><media:content medium="image" url="https://vtvz.me/blog/entrepreneur-calculator/cover.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry xml:lang="ru"><title type="html">Очистка Android от предустановленных программ без Root’а и перепрошивки</title><link href="https://vtvz.me/blog/android-debloating/" rel="alternate" type="text/html" title="Очистка Android от предустановленных программ без Root'а и перепрошивки" /><published>2020-01-06T00:00:00+03:00</published><updated>2020-01-06T00:00:00+03:00</updated><id>https://vtvz.me/blog/android-debloating</id><content type="html" xml:base="https://vtvz.me/blog/android-debloating/">&lt;p&gt;До недавнего времени я свято верил, что предустановленные программы в Android устройствах
могут быть либо выключены, либо удалены только с перепрошивкой телефона.
Root доступ дает не только большие возможности, но и большие риски.
Поэтому я не стал перепрошивать свой телефон и оставил родную прошивку.
Но не так давно я &lt;a href=&quot;https://habr.com/ru/post/482344/&quot;&gt;обнаружил&lt;/a&gt;, что есть вполне рабочий способ удалить намертво установленные программы со своего устройства.&lt;/p&gt;

&lt;!--cut--&gt;

&lt;h2 id=&quot;зачем&quot;&gt;Зачем?&lt;/h2&gt;

&lt;p&gt;При покупке устройства, вместе с телефоном/планшетом идет просто гора различных программ – бесполезных и даже вредных.
В первую очередь, это все то, что начинается с “Google” (Music, Photo, Video, Maps, Hangouts…).
А с китайскими телефонами типа Xiaomi тянется еще ворох различного мусора.
Думаю, проблема еще больше усугубится, когда будет в полной мере заработает &lt;a href=&quot;https://www.kommersant.ru/doc/4179598&quot;&gt;закон&lt;/a&gt; об предустановке российского ПО на новые девайсы.&lt;/p&gt;

&lt;p&gt;Это барахло не только занимает место на телефоне, но и съедает ресурсы, сажает батарею и вечно обновляется через Play Market.
Последней каплей было то, когда Google Maps спросил меня “Ну и как вам было в Burger King?”.
Большинство программ, особенно встроенных, отслеживают всё, что вы делаете.
Даже если вам нечего скрывать, это все равно как-то не этично и немного жутковато.&lt;/p&gt;

&lt;p&gt;Перепрошивать телефон сложно и не безопасно. Всегда есть шанс превратить устройство в кирпич.
Но есть один замечательный способ удалить весь этот мусор без подобных рисков.&lt;/p&gt;

&lt;div class=&quot;alert alert-danger&quot; role=&quot;alert&quot;&gt;
    &lt;p&gt;&lt;b&gt;Будьте очень аккуратны!&lt;/b&gt;&lt;/p&gt;
    &lt;p&gt;
        Хоть этот способ очистки устройства намного проще всех остальных мне знакомых,
        он все равно требует определенных технических знаний и навыков.
        Будьте очень аккуратны, чтобы не повредить устройство и не удалить ПО, необходимое для работы системы. 
    &lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;Весь этот процесс называется “Debloating”, что переводится как “&lt;strong&gt;раз&lt;/strong&gt;раздувать”,
то есть обратное значение слову “раздувать”.&lt;/p&gt;

&lt;h2 id=&quot;инструкция&quot;&gt;Инструкция&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;https://4idroid.com/kak-vklyuchit-rezhim-dlya-razrabotchika-v-android/&quot;&gt;Включите&lt;/a&gt; “режим разработчика”;&lt;/li&gt;
  &lt;li&gt;Включите “Отладка по USB” в разделе “Для разработчиков”;&lt;/li&gt;
  &lt;li&gt;Установите &lt;a href=&quot;https://play.google.com/store/apps/details?id=bg.projectoria.appinspector&quot;&gt;App Inspector&lt;/a&gt;; &lt;br /&gt;
 &lt;em&gt;Это не обязательный пункт&lt;/em&gt;. В некоторых системах (как у меня в MIUI 9.6.2) ID приложения можно узнать так:
    &lt;ul&gt;
      &lt;li&gt;Настройки&lt;/li&gt;
      &lt;li&gt;Все приложения&lt;/li&gt;
      &lt;li&gt;Нужное приложение&lt;/li&gt;
      &lt;li&gt;Значок ⓘ в верхнем правом углу&lt;/li&gt;
      &lt;li&gt;Имя пакета&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Установите &lt;a href=&quot;https://www.xda-developers.com/install-adb-windows-macos-linux/&quot;&gt;Adb&lt;/a&gt; на компьютер;&lt;/li&gt;
  &lt;li&gt;В App Inspector найдите приложение, которое хотите удалить.
 Из всех данных необходимо только поле “Package name”;&lt;/li&gt;
  &lt;li&gt;Подключите устройство по USB к компьютеру;&lt;/li&gt;
  &lt;li&gt;Введите команду &lt;code class=&quot;highlighter-rouge&quot;&gt;adb devices&lt;/code&gt;. Должен быть примерно следующий вывод:
    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;adb devices
 List of devices attached
 6c3eaa477cf3    device
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;p&gt;То есть, после строчки &lt;code class=&quot;highlighter-rouge&quot;&gt;List of devices attached&lt;/code&gt; должна быть еще одна с ID подключенного устройства.
 Идти дальше нет смысла, если компьютер не видит ваш девайс.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Введите &lt;code class=&quot;highlighter-rouge&quot;&gt;adb uninstall &amp;lt;package-name&amp;gt;&lt;/code&gt;, где &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;package-name&amp;gt;&lt;/code&gt; – поле из пункта 5.
 В моем случае – &lt;code class=&quot;highlighter-rouge&quot;&gt;com.google.android.tts&lt;/code&gt;. Результат:
    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;adb uninstall com.google.android.tts
 Success
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;После удаления всех ненужных приложений выключите “режим разработчика” или хотя бы “отладку по USB”.
 Это важно, потому что в режиме отладки устройство очень уязвимо.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;В случае, если у вас Xiaomi, возможно, лучше воспользоваться инструментом “&lt;a href=&quot;https://www.reddit.com/r/Xiaomi/wiki/debloat&quot;&gt;Xiaomi ADB/Fastboot Tools&lt;/a&gt;”.
Во-первых, он имеет графический интерфейс. А во-вторых, что самое главное,
в списке программ доступных для удаления нет того, что является критичным для работоспособности системы.
Но, хоть и говорят, что из этого списка можно удалять все, я бы не рекомендовал вслепую сносить все подряд.&lt;/p&gt;

&lt;h2 id=&quot;итого&quot;&gt;Итого&lt;/h2&gt;

&lt;p&gt;Пока сложно сказать об объективных результатах очистки телефона,
но места на устройстве стало значительно больше, анимация стала плавнее,
а занятой оперативной памяти – меньше.&lt;/p&gt;

&lt;p&gt;Если что-то не получается или есть какие-то вопросы – ниже есть секция с комментариями.
Буду рад любому фитбеку :blush:&lt;/p&gt;</content><author><name>Vitaly Zaslavsky</name><email>vtvz@pm.me</email></author><category term="Android" /><category term="Оптимизация" /><summary type="html">До недавнего времени я свято верил, что предустановленные программы в Android устройствах могут быть либо выключены, либо удалены только с перепрошивкой телефона. Root доступ дает не только большие возможности, но и большие риски. Поэтому я не стал перепрошивать свой телефон и оставил родную прошивку. Но не так давно я обнаружил, что есть вполне рабочий способ удалить намертво установленные программы со своего устройства.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://vtvz.me/blog/android-debloating/cover.jpg" /><media:content medium="image" url="https://vtvz.me/blog/android-debloating/cover.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry xml:lang="ru"><title type="html">Первый успех. Больше ста визитов за неделю</title><link href="https://vtvz.me/blog/first-success/" rel="alternate" type="text/html" title="Первый успех. Больше ста визитов за неделю" /><published>2019-11-30T00:00:00+03:00</published><updated>2019-11-30T00:00:00+03:00</updated><id>https://vtvz.me/blog/first-success</id><content type="html" xml:base="https://vtvz.me/blog/first-success/">&lt;p&gt;Мой блог, как мой питомец. Я его люблю, вкладываю туда свои время и силы.
Для создания чего-то нового приходится тратить свой творческий ресурс.
Да, даже чисто техническая статья должна быть интересной, неоднотонной, без повторяющихся слов, грамотной, корректной
и другие страшные слова.&lt;/p&gt;

&lt;p&gt;Потратив этот ресурс, так или иначе хочется, чтобы это творение не осталось незамеченным.
Художники делают выставки, музыканты записывают треки, танцоры выступают на концертах и т.д.
А авторы статей и блогеры хотят, чтобы их читали. Хоть мой блог и был создал в первую очередь для меня,
мне все равно не хочется писать впустую, а каждое посещение странички греет мне сердце.
Тут коротко о моих первых успехах в продвижении сайта.&lt;/p&gt;

&lt;!--cut--&gt;

&lt;figure class=&quot;frame&quot;&gt;
    &lt;a href=&quot;./intro-report.png&quot; target=&quot;_blank&quot;&gt;
      &lt;img src=&quot;./intro-report.png&quot; alt=&quot;Отчет по источникам за год&quot; /&gt;
    &lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;Есть много способов продвинуть свой сайт в люди без сильных расходов. Да, это будет гораздо медленнее и не так эффективно,
чем грамотно сделанная реклама. Но и за бесплатно можно достичь некоторых результатов.&lt;/p&gt;

&lt;h2 id=&quot;никнейм&quot;&gt;Никнейм&lt;/h2&gt;

&lt;p&gt;Однажды, незадолго после окончания школы (~2013г.), мне представилась замечательная возможность приобрести свой личный домен.
Соглашусь, делается это несложно. Но тогда я не умел ничего связанного с реальной разработкой веб-сайтов.
Я хотел что-то короткое, лаконичное, созвучное с моим ФИО. Все трехбуквенные варианты уже были заняты.
На придумывание не ушло много времени, я выбрал &lt;code class=&quot;highlighter-rouge&quot;&gt;vtvz&lt;/code&gt;. Вскоре, это стало моим логином/URL’ом/ником везде:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://vk.com/vtvz_ru&quot;&gt;https://vk.com/vtvz_ru&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.facebook.com/vtvz.ru&quot;&gt;https://www.facebook.com/vtvz.ru&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.linkedin.com/in/vtvz/&quot;&gt;https://www.linkedin.com/in/vtvz/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;mailto:vtvz.ru@gmail.com&quot;&gt;vtvz.ru@gmail.com&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;mailto:vtvz@pm.me&quot;&gt;vtvz@pm.me&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://steamcommunity.com/id/vtvz_ru&quot;&gt;https://steamcommunity.com/id/vtvz_ru&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Minecraft username: vtvz&lt;/li&gt;
  &lt;li&gt;Моя подпись (да, все зашло слишком далеко :grin:)&lt;/li&gt;
  &lt;li&gt;и т.д.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Update: Некоторые из этих ссылок могут не работать&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Даже WiFi сеть и Bluetooth у меня обозваны ссылкой на сайт:&lt;/p&gt;

&lt;figure class=&quot;frame&quot;&gt;
  &lt;img src=&quot;wifi.png&quot; alt=&quot;Название wifi сети: vtvz.ru&quot; /&gt;
&lt;/figure&gt;

&lt;p&gt;До появления блога, когда существовала только визитка, на сайт приходили люди из разных городов и даже стран.
Сложно сказать, сколько именно пришло из-за никнейма, но однозначно такие люди есть.
Наверняка из всех 497 посетителей по “прямому заходу” (вбил руками в бразуезе) есть те, кому было любопытно,
что скрывается под ником-ссылкой.&lt;/p&gt;

&lt;h2 id=&quot;поисковики&quot;&gt;Поисковики&lt;/h2&gt;

&lt;p&gt;На текущий момент, мой сайт не часто попадает в поисковые выдачи, и кликов приходит не так много.
Это вполне себе логично, так как:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Сайт сравнительно молодой. (6 лет это мало?)&lt;/li&gt;
  &lt;li&gt;На нем не так много контента.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;С точки зрения SEO у меня почти всё сделано по последним канонам продвижения, но некоторые прорехи есть,
которые устранить сложнее. Но, как мне сказали, это и может ускорить поднятие в списке выдачи, но самое главное – это контент.
Тут есть проблемы… За этот год вышло всего шесть статей (эта седьмая), что не есть айс.&lt;/p&gt;

&lt;p&gt;Но есть определенная закономерность: узконаправленные статьи, решающие конкретную проблему,
гораздо чаще попадают в результаты поиска.&lt;/p&gt;

&lt;figure class=&quot;frame&quot;&gt;
  &lt;img src=&quot;google-console.png&quot; alt=&quot;Google Search Console&quot; /&gt;
&lt;/figure&gt;

&lt;p&gt;Гуглу, кстати говоря, я понравился больше. За этот год он показал меня аж 611 раз! Вот страницы-рекордсмены:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;/blog/html-to-mysql/&quot;&gt;“HTML to MySQL. Или Веб-скрапинг на практике”&lt;/a&gt; – 426 показов / 3 клика;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/blog/jekyll-spoiler-plugin/&quot;&gt;“Jekyll Spoiler Plugin. Куда и как прятать код”&lt;/a&gt; – 75 показов / 3 клика;&lt;/li&gt;
  &lt;li&gt;И (внезапно) &lt;a href=&quot;/&quot;&gt;главная страница&lt;/a&gt; и &lt;a href=&quot;/blog/openning/&quot;&gt;“Свершилось! Часть первая. Зачем мне блог”&lt;/a&gt; – 129 показов / 1 + 1 клик;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Самые популярные запросы [в скобочках количество показов]:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;скрапинг [65] / веб скрапинг [32] / скрапинг это [16] / веб-скрапинг [8] / скрапинг публичных сайтов [2]&lt;/li&gt;
  &lt;li&gt;vtvz [32] (Как так?)&lt;/li&gt;
  &lt;li&gt;markdown spoiler [11] / код спойлера [8]&lt;/li&gt;
&lt;/ol&gt;

&lt;details class=&quot;spoiler&quot;&gt;&lt;summary class=&quot;spoiler-title&quot;&gt;Небольшое замечание&lt;/summary&gt;&lt;div class=&quot;spoiler-body&quot;&gt;
&lt;p&gt;У Гугла статистика по запросам и по страницам очень сильно расходится.
Тогда как он показал мне суммарно 8 кликов из поисковика на вкладке “Страницы”, 
на вкладке “Запросы” нет &lt;strong&gt;ни одного клика (!)&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Может я что-то упускаю, но очень бы хотелось знать, по каким запросам пришли люди на сайт.&lt;/p&gt;

&lt;div class=&quot;row&quot;&gt;
    &lt;div class=&quot;col-sm-6&quot;&gt;
        &lt;figure&gt;&lt;a href=&quot;./google-console-queues.png&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;./google-console-queues.png&quot; alt=&quot;Статистика по запросам&quot; /&gt;&lt;/a&gt;&lt;/figure&gt;
    &lt;/div&gt;
    &lt;div class=&quot;col-sm-6&quot;&gt;
        &lt;figure&gt;&lt;a href=&quot;./google-console-pages.png&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;./google-console-pages.png&quot; alt=&quot;Статистика по страницам&quot; /&gt;&lt;/a&gt;&lt;/figure&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/details&gt;

&lt;p&gt;По поводу третьего пункта все ясно – решенная мной задача скорее уникальная, чем распространенная.&lt;/p&gt;

&lt;p&gt;Но почему скрапинг? Тема вроде как достаточно известная. Может быть материала на эту тему действительно мало?
Возможно это моя золотая жила? Надо исследовать в эту сторону :grin:&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Касательно Яндекса… Может быть в нем контенгент немного другой.
Как правило, программисты пользуются Гуглом для поиска решений своих проблем.
Возможно именно поэтому за год я появлялся в выборке всего 63 раза. Это примерно в 10 раз меньше, чем Гугл.&lt;/p&gt;

&lt;p&gt;Яндекс тоже не особо многословен:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;виталий заславский – 6 показов;&lt;/li&gt;
  &lt;li&gt;заславский виталий – 4 показа;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Стоит отметить, что 6+4≠63. Куда делись остальные 53 показа?&lt;/p&gt;

&lt;details class=&quot;spoiler&quot;&gt;&lt;summary class=&quot;spoiler-title&quot;&gt;Кстати об этом...&lt;/summary&gt;&lt;div class=&quot;spoiler-body&quot;&gt;
&lt;p&gt;Статистика у него тоже неплохо так расходится. Опять же, возможно я что-то упускаю?&lt;/p&gt;

&lt;div class=&quot;row&quot;&gt;
    &lt;div class=&quot;col-sm-4&quot;&gt;
        &lt;figure&gt;&lt;a href=&quot;./yandex-groups.png&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;./yandex-groups.png&quot; alt=&quot;Статистика по группам&quot; /&gt;&lt;/a&gt;&lt;/figure&gt;
    &lt;/div&gt;
    &lt;div class=&quot;col-sm-4&quot;&gt;
        &lt;figure&gt;&lt;a href=&quot;./yandex-pages.png&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;./yandex-pages.png&quot; alt=&quot;Статистика страниц&quot; /&gt;&lt;/a&gt;&lt;/figure&gt;
    &lt;/div&gt;
    &lt;div class=&quot;col-sm-4&quot;&gt;
        &lt;figure&gt;&lt;a href=&quot;./yandex-popular.png&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;./yandex-popular.png&quot; alt=&quot;Статистика по популярным запросам&quot; /&gt;&lt;/a&gt;&lt;/figure&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/details&gt;

&lt;p&gt;Мне еще много чего нужно сделать, чтобы поисковики и люди полюбили мой сайт:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Дублировать статьи в &lt;a href=&quot;https://zen.yandex.ru/&quot;&gt;Yandex.Zen&lt;/a&gt;;&lt;/li&gt;
  &lt;li&gt;Подключить &lt;a href=&quot;https://yandex.ru/dev/turbo/&quot;&gt;Турбо-страницы&lt;/a&gt;;&lt;/li&gt;
  &lt;li&gt;Сделать &lt;a href=&quot;https://developers.google.com/amp/?hl=ru&quot;&gt;AMP версии страниц&lt;/a&gt;;&lt;/li&gt;
  &lt;li&gt;На главную страницу расположить список последних постов;&lt;/li&gt;
  &lt;li&gt;И еще много всякого разного…&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Но мой &lt;a href=&quot;https://www.facebook.com/ifrolov2&quot;&gt;коллега&lt;/a&gt;, который на продвижении уже собоку съел,
ясно дал понять, что ключ не в поисковых оптимизациях и прочей магии, а в контенте.
Так что самая важная для меня задача – писать больше статей.&lt;/p&gt;

&lt;h2 id=&quot;социальные-сети&quot;&gt;Социальные сети&lt;/h2&gt;

&lt;p&gt;В какой-то степени, социальные сети являются основным стабильным источником трафика.
За последний год из соц. сетей было 155 посещений, 122 которых пришлось на ВК (&lt;a href=&quot;https://vk.com/blog_vtvz&quot;&gt;кстати об этом&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;Откровенно говоря, мой блог хоть и обо всем, но целевая аудитория – IT-инженеры.
И тут получается некоторый конфликт: я хочу писать технические статьи, но их особо никто читать не будет,
потому основной поток читателей приходится из социальных сетей, где в друзьях у меня люди другой направленности.&lt;/p&gt;

&lt;p&gt;Тем не менее, большое спасибо тем, кто приходит, и особенно тем, кто дочитывает до конца. Для меня это важно :blush:&lt;/p&gt;

&lt;h2 id=&quot;дайджесты&quot;&gt;Дайджесты&lt;/h2&gt;

&lt;p&gt;Дайджест – это некоторый агрегатор интересных материалов по определенной тематике за какой-то период.&lt;/p&gt;

&lt;p&gt;Есть 2 основных дайджеста, в которые я потенциально мог попасть:
&lt;a href=&quot;https://habr.com/ru/users/pronskiy/posts/&quot;&gt;PHP-Дайджест&lt;/a&gt;
и &lt;a href=&quot;https://habr.com/ru/users/alexzfort/posts/&quot;&gt;Фронтенд дайджест&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Первая статья, которая попала в массы – &lt;a href=&quot;/blog/html-to-mysql/&quot;&gt;“HTML to MySQL. Или Веб-скрапинг на практике”&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;И она не попала ни в один из перечисленных выше дайджестов. Когда я отправил ссылку одному из авторов этих подборок,
мне дали ясно понять, что эта статья не уровня Хабра. Но, как оказалось позднее, у этих ребят есть еще свой &lt;a href=&quot;https://zfort.com.ua/&quot;&gt;сайт&lt;/a&gt;,
куда они тоже публикуют дайджесты, куда мне &lt;a href=&quot;https://zfort.com.ua/blog/category/digest/frontend-daidzhest-353-18-24-fevralya-2019&quot;&gt;удалось попасть&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;В итоге, за все это время мне удалось собрать 16 переходов. Не очень много, но это уже приятно :blush:&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Самой успешной оказалась статья &lt;a href=&quot;/blog/custom-doctrine-annotation-fixer/&quot;&gt;“Пишем свой Doctrine Annotation Fixer для PHP-CS-Fixer”&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Это было именно то, что по всем критериям попадало в PHP-Дайджест:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Она напрямую связана с PHP;&lt;/li&gt;
  &lt;li&gt;Она уникальна в своем роде, так как существующие статьи уже устарели, подобная проблема не решалась, а материалов на русском найти невозможно;&lt;/li&gt;
  &lt;li&gt;Статья достаточно подробная, чтобы было понятно новичку, но без лишней воды, чтобы уже опытным было интересно.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Откровенно говоря, она и была написана с целью попасть в &lt;a href=&quot;https://habr.com/ru/post/477318/&quot;&gt;этот дайджест&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Более ста визитов за одну неделю и 171 за все время. И целых 2 комментария!
Цифры пока еще достаточно скромные, но, определенно, это прорыв! Для меня это настоящий успех! :tada:&lt;/p&gt;

&lt;figure&gt;&lt;a href=&quot;./success.png&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;./success.png&quot; alt=&quot;Статистика визитов за неделю&quot; /&gt;&lt;/a&gt;&lt;/figure&gt;

&lt;p&gt;Самое приятное в этой ситуации то, что на сайт приходили не просто люди, а целевая аудитория – те, для кого была написана эта статья.&lt;/p&gt;

&lt;p&gt;Вероятно, это моя первая и последняя статья, которая попала в подобную подборку.
Просто потому, что я не нашел подходящих дайджестов по моим текущим направлениям (DevOps и немного Go).&lt;/p&gt;

&lt;h2 id=&quot;итого&quot;&gt;Итого&lt;/h2&gt;

&lt;p&gt;Сложно делать какие-то выводы. Цель этой статьи не в том, чтобы кого-то чему-то научить.
У меня произошло радостное событие, и я хотел с вами им поделиться :blush:&lt;/p&gt;

&lt;p&gt;Писать статьи – очень трудоемкий процесс, который я, возможно, опишу в отдельной статье. 
Поэтому спасибо всем, кто дочитал до конца; статья вышла достаточно большой.
Для меня ценно каждое посещение, каждый просмотр.&lt;/p&gt;

&lt;p&gt;Гляди, может быть наберется аудитория преданных читателей :grin:&lt;/p&gt;</content><author><name>Vitaly Zaslavsky</name><email>vtvz@pm.me</email></author><category term="Веб-разработка" /><category term="Блог" /><summary type="html">Мой блог, как мой питомец. Я его люблю, вкладываю туда свои время и силы. Для создания чего-то нового приходится тратить свой творческий ресурс. Да, даже чисто техническая статья должна быть интересной, неоднотонной, без повторяющихся слов, грамотной, корректной и другие страшные слова. Потратив этот ресурс, так или иначе хочется, чтобы это творение не осталось незамеченным. Художники делают выставки, музыканты записывают треки, танцоры выступают на концертах и т.д. А авторы статей и блогеры хотят, чтобы их читали. Хоть мой блог и был создал в первую очередь для меня, мне все равно не хочется писать впустую, а каждое посещение странички греет мне сердце. Тут коротко о моих первых успехах в продвижении сайта.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://vtvz.me/assets/images/logo-black.png" /><media:content medium="image" url="https://vtvz.me/assets/images/logo-black.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry xml:lang="ru"><title type="html">Пишем свой Doctrine Annotation Fixer для PHP-CS-Fixer</title><link href="https://vtvz.me/blog/custom-doctrine-annotation-fixer/" rel="alternate" type="text/html" title="Пишем свой Doctrine Annotation Fixer для PHP-CS-Fixer" /><published>2019-11-06T00:00:00+03:00</published><updated>2019-11-06T00:00:00+03:00</updated><id>https://vtvz.me/blog/custom-doctrine-annotation-fixer</id><content type="html" xml:base="https://vtvz.me/blog/custom-doctrine-annotation-fixer/">&lt;p&gt;В плане код-стайла я немного маньяк.
Я убежден – чем более строгие правила, тем качественнее будет кодовая база.
Когда я только пришел в компанию &lt;a href=&quot;https://axmit.com/&quot;&gt;Axmit&lt;/a&gt; в качестве разработчика,
моей личной целью стало создание перечня правил, а также настройка всякого рода фиксеров и снифферов.
Теперь у нас используется как &lt;a href=&quot;https://github.com/squizlabs/PHP_CodeSniffer&quot;&gt;CodeSniffer&lt;/a&gt;, так и &lt;a href=&quot;https://github.com/FriendsOfPHP/PHP-CS-Fixer&quot;&gt;PHP-CS-Fixer&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Большинство правил у нас автоматизированы &lt;a href=&quot;https://www.jetbrains.com/phpstorm/&quot;&gt;PHPStorm&lt;/a&gt; и &lt;a href=&quot;https://github.com/FriendsOfPHP/PHP-CS-Fixer&quot;&gt;PHP-CS-Fixer&lt;/a&gt;,
поэтому следование им не создает слишком много боли.&lt;/p&gt;

&lt;p&gt;Но был момент, который не был ни в одном из этих инструментов, заставляюший меня страдать.&lt;/p&gt;

&lt;!--cut--&gt;

&lt;p&gt;Все дело в Doctrine аннотациях. Шторм с ними ничего не делает совсем.
А вот фиксер имеет ряд правил, исправляющих отступы, скобочки и т.п.&lt;/p&gt;

&lt;p&gt;А вот в чем была проблема. Обратите внимание на запятые.&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cd&quot;&gt;/**
 * @SWG\Definition(
 *     definition=&quot;ActionFilterRequest&quot;,
 *     @SWG\Property(property=&quot;service_id&quot;, type=&quot;integer&quot;)
 * )
 */&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cd&quot;&gt;/**
 * @SWG\Definition(
 *     definition=&quot;ActionFilterRequest&quot;,
 *     @SWG\Property(property=&quot;service_id&quot;, type=&quot;integer&quot;,),
 * )
 */&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Эти оба куска абсолютно идентичны с точки зрения Доктрины.
И нет ни одного фиксера (по крайней мере я не нашел), который расставит все запятые по своим местам.
Вручную следить за этим достаточно сложно. Поэтому решено было написать своё правило.&lt;/p&gt;

&lt;p&gt;Я хочу, чтобы на выходе после исправления это было так:&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cd&quot;&gt;/**
 * @SWG\Definition(
 *     definition=&quot;ActionFilterRequest&quot;,
 *     @SWG\Property(property=&quot;service_id&quot;, type=&quot;integer&quot;),
 * )
 */&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;То есть точно также, как с массивами:
при однострочной записи без запятой в конце последнего элемента,
а при многострочной – с.&lt;/p&gt;

&lt;p&gt;И так, приступим!&lt;/p&gt;

&lt;h2 id=&quot;исследование&quot;&gt;Исследование&lt;/h2&gt;

&lt;p&gt;Внутри библиотеки все фиксеры для доктриновских аннотаций унаследованы от класса &lt;code class=&quot;highlighter-rouge&quot;&gt;\PhpCsFixer\AbstractDoctrineAnnotationFixer&lt;/code&gt;
с одним единственным абстрактным методом &lt;code class=&quot;highlighter-rouge&quot;&gt;fixAnnotations&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Исследовав другие фиксеры ближе, можно увидеть, что в этот метод передается только один параметр – коллекция токенов.
Эта коллекция мутабельная и результат её изменений будет использоваться для формирования итогового кода.&lt;/p&gt;

&lt;p&gt;Минимально возможный фиксер, который пока ничего не делает, выглядит примерно так:&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;//  Тут есть пара неиспользуемых импортов, но скоро они будут нужны&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Doctrine\Common\Annotations\DocLexer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;PhpCsFixer\AbstractDoctrineAnnotationFixer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;PhpCsFixer\Doctrine\Annotation\Token&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;PhpCsFixer\Doctrine\Annotation\Tokens&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;PhpCsFixer\FixerDefinition\FixerDefinition&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;PhpCsFixer\FixerDefinition\FixerDefinitionInterface&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;DoctrineAnnotationCommasFixer&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;AbstractDoctrineAnnotationFixer&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;cd&quot;&gt;/**
     * @return string
     */&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;static&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;cd&quot;&gt;/**
     * @return string
     */&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Axmit/doctrine_annotation_commas'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;cd&quot;&gt;/**
     * @return FixerDefinitionInterface
     */&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getDefinition&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;FixerDefinitionInterface&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;FixerDefinition&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Fixes commas in Doctrine annotations'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;cd&quot;&gt;/**
     * Fixes Doctrine annotations from the given PHPDoc style comment.
     *
     * @param Tokens $tokens
     *
     * @return void
     */&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;fixAnnotations&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Tokens&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$tokens&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;void&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Обратите особое внимание на методы &lt;code class=&quot;highlighter-rouge&quot;&gt;name&lt;/code&gt; и &lt;code class=&quot;highlighter-rouge&quot;&gt;getName&lt;/code&gt;.
Имя фиксера должно быть строго в таком формате, иначе будет ошибка
(регулярки можно посмотреть в &lt;code class=&quot;highlighter-rouge&quot;&gt;\PhpCsFixer\FixerNameValidator::isValid&lt;/code&gt;).
Статическим методом &lt;code class=&quot;highlighter-rouge&quot;&gt;name&lt;/code&gt; воспользуемся чуть позже.&lt;/p&gt;

&lt;p&gt;Дабы не нагромождать статью простынями кода, все остальные куски исходников будут внутри метода &lt;code class=&quot;highlighter-rouge&quot;&gt;fixAnnotations&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;регистрация&quot;&gt;Регистрация&lt;/h2&gt;

&lt;p&gt;Чтобы понять, как заставить фиксер включить моё правило потребовался почти час.
Для того, чтобы все заработало, нужно сделать 2 вещи:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Зарегистрировать фиксер в конфиге (файл &lt;code class=&quot;highlighter-rouge&quot;&gt;.php_cs.dist&lt;/code&gt;):
    &lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;registerCustomFixers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;DoctrineAnnotationCommasFixer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;p&gt;Теперь фиксер знает о существовании этого правила, но пока не использует его.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Включить его в рулзах:
    &lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setRules&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;DoctrineAnnotationCommasFixer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// помните статический метод name? :-)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;И только тогда фиксер не только подключит это правило, но и будет его использовать.&lt;/p&gt;

&lt;h2 id=&quot;исправление&quot;&gt;Исправление&lt;/h2&gt;

&lt;p&gt;Настало время написать логику и оживить наш фикс!&lt;/p&gt;

&lt;p&gt;Если описать словами, то суть такова:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Найти все закрывающие обычные и фигурные скобки;&lt;/li&gt;
  &lt;li&gt;Посмотреть, что перед ними:
    &lt;ol&gt;
      &lt;li&gt;Если это пустота (игнорируемый код), то добавить перед ней запятую, если запятой нет;&lt;/li&gt;
      &lt;li&gt;Если это запятая – удалить&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;По коллекции токенов можно пройтись циклом, как по массиву.
Но мы этого делать не будем по причине, которую я объясню позже.&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$index&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$tokens&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;offsetExists&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;cd&quot;&gt;/** @var Token $token */&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;$token&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$tokens&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;offsetGet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;//TODO Add logic here &lt;/span&gt;

    &lt;span class=&quot;nv&quot;&gt;$index&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Класс &lt;code class=&quot;highlighter-rouge&quot;&gt;Token&lt;/code&gt; имеет 2 важных свойства – это тип и содержимое.
Тип является числовым значением, все из которых находятся в классе &lt;code class=&quot;highlighter-rouge&quot;&gt;DocLexer&lt;/code&gt; в виде констант.&lt;/p&gt;

&lt;p&gt;Проверить тип токена можно методом &lt;code class=&quot;highlighter-rouge&quot;&gt;isType&lt;/code&gt;, куда можно передать либо одно значение, либо массив:&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$token&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isType&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;DocLexer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;T_CLOSE_CURLY_BRACES&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;DocLexer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;T_CLOSE_PARENTHESIS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;С первым пунктом разобрались – мы нашли все закрывающие скобки.
Далее нужно вытянуть 2 токена перед текущим:&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$prevToken&lt;/span&gt;     &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$tokens&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;offsetGet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$index&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$prevPrevToken&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$tokens&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;offsetGet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$index&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Далее просто: если предыдущий токен – ничего 
(это могут быть пробелы, переносы строк и знак * в любом порядке и количестве;
стоит отметить, что в коллекции 2 токена “ничего” подряд не бывает),
и токен перед ним не является запятой, то нужно добавить запятую:&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$prevToken&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isType&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;DocLexer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;T_NONE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$prevPrevToken&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isType&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;DocLexer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;T_COMMA&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;$tokens&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;insertAt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$index&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Token&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;DocLexer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;T_COMMA&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;','&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Иначе, если сразу перед скобкой стоит запятая – убрать:&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;elseif&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$prevToken&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isType&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;DocLexer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;T_COMMA&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;$prevToken&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;clear&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;И вроде бы уже все, но если попробовать запустить фиксер с этим правилом, он никогда не завершит свою работу.
Проблема кроется там, где мы добавляем запятую – программа уходит в бесконечный цикл.
Чтобы решить эту проблему, достаточно добавить еще один &lt;code class=&quot;highlighter-rouge&quot;&gt;$index++&lt;/code&gt; после добавления запятой:&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$prevToken&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isType&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;DocLexer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;T_NONE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$prevPrevToken&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isType&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;DocLexer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;T_COMMA&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;$tokens&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;insertAt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$index&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Token&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;DocLexer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;T_COMMA&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;','&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;$index&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// причина, по которой нужен был цикл while вместо for&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;И все! Фиксер готов, можно выдохнуть :grin:&lt;/p&gt;

&lt;details class=&quot;spoiler&quot;&gt;&lt;summary class=&quot;spoiler-title&quot;&gt;Собрав все воедино&lt;/summary&gt;&lt;div class=&quot;spoiler-body&quot;&gt;
&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Doctrine\Common\Annotations\DocLexer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;PhpCsFixer\AbstractDoctrineAnnotationFixer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;PhpCsFixer\Doctrine\Annotation\Token&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;PhpCsFixer\Doctrine\Annotation\Tokens&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;PhpCsFixer\FixerDefinition\FixerDefinition&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;PhpCsFixer\FixerDefinition\FixerDefinitionInterface&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;DoctrineAnnotationCommasFixer&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;AbstractDoctrineAnnotationFixer&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;cd&quot;&gt;/**
     * @return string
     */&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;static&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;cd&quot;&gt;/**
     * @return string
     */&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Axmit/doctrine_annotation_commas'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;cd&quot;&gt;/**
     * @return FixerDefinitionInterface
     */&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getDefinition&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;FixerDefinitionInterface&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;FixerDefinition&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Fixes commas in Doctrine annotations'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;cd&quot;&gt;/**
     * Fixes Doctrine annotations from the given PHPDoc style comment.
     *
     * @param Tokens $tokens
     *
     * @return void
     */&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;fixAnnotations&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Tokens&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$tokens&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;void&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nv&quot;&gt;$index&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$tokens&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;offsetExists&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;cd&quot;&gt;/** @var Token $token */&lt;/span&gt;
            &lt;span class=&quot;nv&quot;&gt;$token&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$tokens&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;offsetGet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$token&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isType&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;DocLexer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;T_CLOSE_CURLY_BRACES&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;DocLexer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;T_CLOSE_PARENTHESIS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;nv&quot;&gt;$prevToken&lt;/span&gt;     &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$tokens&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;offsetGet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$index&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                &lt;span class=&quot;nv&quot;&gt;$prevPrevToken&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$tokens&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;offsetGet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$index&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$prevToken&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isType&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;DocLexer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;T_NONE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$prevPrevToken&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isType&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;DocLexer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;T_COMMA&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;nv&quot;&gt;$tokens&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;insertAt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$index&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Token&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;DocLexer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;T_COMMA&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;','&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
                    &lt;span class=&quot;nv&quot;&gt;$index&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// prevent infinite loop&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;elseif&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$prevToken&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isType&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;DocLexer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;T_COMMA&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;nv&quot;&gt;$prevToken&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;clear&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

            &lt;span class=&quot;nv&quot;&gt;$index&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;/div&gt;&lt;/details&gt;

&lt;h2 id=&quot;послесловие&quot;&gt;Послесловие&lt;/h2&gt;

&lt;p&gt;Тут стоит отметить пару моментов:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Если вы, как и я, пользуетесь PHPStorm, то вы могли увидеть, что классы &lt;code class=&quot;highlighter-rouge&quot;&gt;AbstractDoctrineAnnotationFixer&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;Token&lt;/code&gt; и &lt;code class=&quot;highlighter-rouge&quot;&gt;Tokens&lt;/code&gt; зачеркнуты.
А происходит это по простой причине – они помечены как внутренние тегом &lt;code class=&quot;highlighter-rouge&quot;&gt;@internal&lt;/code&gt;.
Для нас это означает то, что наш фикс может сломаться в любой момент даже между минорными версиями,
так как никто не обещает стабильного API во внутреннем коде.
(на момент написания статьи использовался &lt;code class=&quot;highlighter-rouge&quot;&gt;friendsofphp/php-cs-fixer:v2.15.1&lt;/code&gt;)
Так что… все на свой страх и риск.&lt;/li&gt;
  &lt;li&gt;Тесты… Я уверен, что для этого можно и нужно писать тесты, в том числе и для проверки совместимости с новой версией фиксера,
но делать я этого не стал.
Просто потому что не нашел это необходимым в данный момент.
Возможно, я с этим разберусь и дополню текущую или напишу новую статью.&lt;/li&gt;
  &lt;li&gt;Потенциально написанное мной правило может работать не так в каких-то крайних случаях.
Но я прогнал его по двум нашим проектам, где более &lt;strong&gt;&lt;nobr&gt;2500 (!)&lt;/nobr&gt;&lt;/strong&gt; вложенных друг в друга аннотаций,
и он расставил запятые во все места и не испортил ни единого файла.
Поэтому я считаю этот вариант вполне себе рабочим и проверенным.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Спасибо за прочтение! :blush:&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;P.S. Внизу, после поста, появился блок с комментариями.
Не стесняйтесь задавать вопросы и указывать на ошибки и неточности.
Я всегда рад коммуникации :wink:&lt;/p&gt;</content><author><name>Vitaly Zaslavsky</name><email>vtvz@pm.me</email></author><category term="Веб-разработка" /><category term="PHP" /><category term="Code-style" /><summary type="html">В плане код-стайла я немного маньяк. Я убежден – чем более строгие правила, тем качественнее будет кодовая база. Когда я только пришел в компанию Axmit в качестве разработчика, моей личной целью стало создание перечня правил, а также настройка всякого рода фиксеров и снифферов. Теперь у нас используется как CodeSniffer, так и PHP-CS-Fixer. Большинство правил у нас автоматизированы PHPStorm и PHP-CS-Fixer, поэтому следование им не создает слишком много боли. Но был момент, который не был ни в одном из этих инструментов, заставляюший меня страдать.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://vtvz.me/assets/images/logo-black.png" /><media:content medium="image" url="https://vtvz.me/assets/images/logo-black.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry xml:lang="ru"><title type="html">Как правильно хранить пароли</title><link href="https://vtvz.me/blog/right-way-to-store-passwords/" rel="alternate" type="text/html" title="Как правильно хранить пароли" /><published>2019-11-03T00:00:00+03:00</published><updated>2019-11-03T00:00:00+03:00</updated><id>https://vtvz.me/blog/right-way-to-store-passwords</id><content type="html" xml:base="https://vtvz.me/blog/right-way-to-store-passwords/">&lt;blockquote&gt;
  &lt;p&gt;Начало 07.10.2019. Статья обещает быть обширной.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Моим первым паролем был &lt;em&gt;“хахаха”&lt;/em&gt;. Не даром в ВК меня быстренько взломали.
Затем у меня был один пароль на все случаи жизни. Инцидентов не было, но метод далек от идеального.
Стоит узнать один пароль, как учетные записи других сервисов окажутся под угрозой. 
Следующим шагом был пароль, состоящий из двух частей: общим префиксом и доменным именем сайта.
Могло это выглядеть примерно так: &lt;em&gt;“МойСуперМощныйПароль123.vk.com”&lt;/em&gt;. Это все ещё очень плохо.&lt;/p&gt;

&lt;p&gt;Я рос. Росла и моя паранойя. Сейчас у меня для каждого отдельного сайта или приложения свой уникальный, неповторимый,
устойчивый к атакам пароль.&lt;/p&gt;

&lt;p&gt;В этой статье я расскажу, как правильно хранить свои пароли, чтобы было удобно, и безопасность не страдала.&lt;/p&gt;

&lt;!--cut--&gt;

&lt;details class=&quot;spoiler&quot;&gt;&lt;summary class=&quot;spoiler-title&quot;&gt;TL;DR&lt;/summary&gt;&lt;div class=&quot;spoiler-body&quot;&gt;
&lt;p&gt;Можно пропустить первый подзаголовок и сразу перейти к &lt;a href=&quot;#рецепт&quot;&gt;готовому рецепту&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Но тогда вы пропустите самое интересное :blush:&lt;/p&gt;
&lt;/div&gt;&lt;/details&gt;

&lt;h2 id=&quot;об-альтернативных-способах&quot;&gt;Об альтернативных способах&lt;/h2&gt;

&lt;p&gt;Небольшое лирическое отступление. Прежде хочется рассказать о том, как другие люди хранят свои пароли.&lt;/p&gt;

&lt;p&gt;Про один пароль для всего и общую приставку я уже рассказал. Так делал не только я. Но есть более диковинные способы.&lt;/p&gt;

&lt;p&gt;Вместе с каждым способом будут субъективные ответы на 2 вопроса:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;em&gt;“Безопасно ли это”&lt;/em&gt; – как много людей и как легко они могут узнать пароли из этого источника.&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;“Надежно ли это”&lt;/em&gt; – что будет в чрезвычайных ситуациях; насколько легко можно потерять доступ ко всему.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;бумажный-блокнотик&quot;&gt;Бумажный блокнотик&lt;/h3&gt;

&lt;p&gt;Так делают, но обычно люди преклонного возраста. Небольшая книжечка с различного рода записями,
где в разных частях можно увидеть пароль от WiFi, Play Store или Одноклассников.
Помимо блокнотиков используется со всех сторон исписанный листочек или даже упаковка от таблеток &lt;em&gt;*[TODO Сделать фото]&lt;/em&gt;.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;em&gt;Безопасно ли это?&lt;/em&gt; Условно. Однозначно, что пароль не будет стянут каким-либо хакером, так как доступ только физический.
Можно ли доверять всем, кто может оказаться рядом? Если ты бабушка, то рисковать особо нечем :blush:&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;em&gt;Надежно ли это?&lt;/em&gt; Опять же, очень ситуативно. Бумажка может потеряться, сгореть или забыться.
Зато нет риска потерять доступ к сервису в случае амнезии. &lt;br /&gt;
(Пожалуй, это единственный способ устойчивый к амнезии)&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;онлайн-заметки&quot;&gt;Онлайн-заметки&lt;/h3&gt;

&lt;p&gt;Из хорошо известных заметочных сервисов, я знаю только &lt;a href=&quot;https://evernote.com/intl/ru&quot;&gt;Evernote&lt;/a&gt; и &lt;a href=&quot;https://keep.google.com/&quot;&gt;Google Keep&lt;/a&gt;.
Последним я стал пользоваться в году так 2013, когда он был совсем еще юным.
(первый мне не понравился).
Есть еще всякие Google Docs и прочие места, куда можно писать текст и читать его со всех устройств.
Пароли можно хранить и там. Но…&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;em&gt;Безопасно ли это?&lt;/em&gt; Вариант с бумажкой был куда более безопасным. Хранить пароли в открытом виде очень даже плохо по нескольким причинам:
    &lt;ol&gt;
      &lt;li&gt;Есть только один способ, как узнать пароль из блокнота – стащить сам блокнот.
  Но есть &lt;code class=&quot;highlighter-rouge&quot;&gt;N&lt;/code&gt; способов, как узнать его из подобного рода сервисов – 
  &lt;code class=&quot;highlighter-rouge&quot;&gt;X&lt;/code&gt; по количеству устройств + &lt;code class=&quot;highlighter-rouge&quot;&gt;Y&lt;/code&gt; по количеству заинтересованных хакеров + &lt;code class=&quot;highlighter-rouge&quot;&gt;Z&lt;/code&gt; по количеству “забыл выйти у друга”.&lt;/li&gt;
      &lt;li&gt;Любая утечка и &lt;strong&gt;все&lt;/strong&gt; пароли буду скомпрометированы. Как веб-разработчик могу уверенно сказать: никому нельзя доверять.
  Даже если используются все способы того, как обезопасить свои заметки,
  всегда есть человеческий фактор как с вашей стороны, так и со стороны создателей сервиса.&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;em&gt;Надежно ли это?&lt;/em&gt; Достаточно. Но с одной оговоркой: сервис должен поддерживать историю изменений файла/заметки.
Иначе любое случайное удаление/редактирование может уничтожить все.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;пароль-карта&quot;&gt;Пароль-карта&lt;/h3&gt;

&lt;p&gt;Есть еще один интересный способ – пароль-карта. Это может быть физически реальный объект или приложение на телефоне.&lt;/p&gt;

&lt;p&gt;Вот пример, сгенерированный на &lt;a href=&quot;https://www.passwordcard.org/ru&quot;&gt;этом сайте&lt;/a&gt;:&lt;/p&gt;

&lt;figure&gt;&lt;img src=&quot;./card.png&quot; alt=&quot;Пароль-карта&quot; /&gt;&lt;/figure&gt;

&lt;p&gt;Или вот &lt;a href=&quot;https://www.e-passwordcard.com/&quot;&gt;многообещающее приложение&lt;/a&gt;:&lt;/p&gt;

&lt;figure&gt;&lt;img src=&quot;./ecard.png&quot; alt=&quot;Еще одна пароль-карта&quot; /&gt;&lt;/figure&gt;

&lt;p&gt;Вторым приложением я не пользовался, но картой пытался.
Достаточно удобно то, что это может быть 
как настоящая распечатанная карточка,
так и приложение на телефоне или ссылка, сохраненная в браузере.&lt;/p&gt;

&lt;p&gt;Для этого метода важно помнить и надежно хранить 2 вещи:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Мастер-ключ (или мастер-пароль – пароль для доступа ко всем паролям).
В случае с первой картой он является &lt;code class=&quot;highlighter-rouge&quot;&gt;e1b18dd6f30ed2f5&lt;/code&gt; (написан в самом низу), 
который можно записать куда угодно, но в безопасное место.
Вводя этот ключ в специальное поле, будет выдана одна и та же карта, что необходимо в случае утери онной.&lt;/li&gt;
  &lt;li&gt;Нужно запоминать способ, как вытягивается пароль. Это может быть простая ассоциация со значком,
где потом используются все символы подряд. Или что-то более замысловатое.
На &lt;a href=&quot;https://www.passwordcard.org/ru&quot;&gt;сайте&lt;/a&gt; есть инструкции и рекомендации, как выбирать пароли, чтобы было безопасно.&lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;em&gt;Безопасно ли это?&lt;/em&gt; Все зависит только от тебя. Чем сложнее способ извлечения пароля, тем надежнее он будет.
Дополнительно надежности дает то, что нельзя наверняка сопоставить значок на карте и сам сервис.
Даже при утере карточки, новый обладатель вряд ли догадается, что с ней делать.&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;Надежно ли это?&lt;/em&gt; Вполне. Мастер-ключ можно записать в несколько мест:
в онлайн-заметки, в блокнотик, нацарапать на стене за диваном.
Карта может быть восстановлена в любое время.
Сложнее, когда забывается ассоциация со значком или способ выбора пароля.
В этом плане этот метод имеет серьезный недостаток, из-за чего лично я отказался от его использования.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;онлайн-сервисы&quot;&gt;Онлайн сервисы&lt;/h3&gt;

&lt;p&gt;Такие сайты-приложения как &lt;a href=&quot;https://www.lastpass.com/ru&quot;&gt;LastPass&lt;/a&gt; и &lt;a href=&quot;https://1password.com/ru/&quot;&gt;1password&lt;/a&gt; предлагают взять весь менеджмент паролей на себя.
Это как хранить данные в онлайн-заметках, только надежнее. Второй аж прям обещает, что ваши данные остаются только вашими.&lt;/p&gt;

&lt;figure&gt;&lt;img src=&quot;./1password-promise.png&quot; alt=&quot;Обещание 1password&quot; /&gt;&lt;/figure&gt;

&lt;p&gt;Эти сервисы богаты функционалом и предлагаемыми решениями:
программы и приложения для всех ОС, расширения для браузеров и API для тех, кому этого мало.&lt;/p&gt;

&lt;p&gt;Но есть одно &lt;strong&gt;НО&lt;/strong&gt;: любая информация в интернете вам не принадлежит. Хотя они и обещают полную конфиденциальность,
в определенный момент это может стать не так. Это касается различных законов со стороны государства, а также хакеров,
которые денно и нощно придумывают все новые и новые способы обхода защиты подобных сайтов.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;em&gt;Безопасно ли это?&lt;/em&gt; Достаточно, но с оговорками. Для обычного пользователя, у которого нет паранойи и особо нечего скрывать,
это наилучший выбор. Сами компании не заинтересованы, чтобы ваши данные утекли кому-то еще, так как это репутация,
которая играет важную роль на конкурентном рынке. Главное, чтобы эти данные не утекли из-за вас самих.
Пароль должен быть достаточно сложным и длинным, чтобы даже в случае утечки данных их нельзя было расшифровать.&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;Надежно ли это?&lt;/em&gt; Настолько, насколько надежна компания, которой вы доверяете.
Я думаю, ваши данные не только надежно хранятся и оберегаются, но и регулярно делаются резервные копии на случай какого-либо сбоя.
Из всех вышеперечисленных способов, этот самый надежный. Приятным бонусом является то, что знать достаточно только один пароль.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;keepass&quot;&gt;KeePass&lt;/h3&gt;

&lt;p&gt;В мире много умных людей, которые сталкивались с этой проблемой.
И они создали по-настоящему хорошее решение.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Встречайте: KeePass!&lt;/strong&gt;&lt;/p&gt;

&lt;figure&gt;&lt;a href=&quot;./keepass.png&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;./keepass.png&quot; alt=&quot;KeePassXC&quot; /&gt;&lt;/a&gt;&lt;/figure&gt;

&lt;p&gt;Это последний и самый лучший способ хранения паролей, который нужно уметь готовить.&lt;/p&gt;

&lt;p&gt;Это одновременно программа, формат файла и алгоритм безопасного хранения данных.
Все ваши пароли хранятся внутри &lt;code class=&quot;highlighter-rouge&quot;&gt;.kdbx&lt;/code&gt; файла, который зашифрован в цикле несколько тысяч (а то и больше) раз
кодовым словом, файлом или и тем и другим.&lt;/p&gt;

&lt;p&gt;Информация хранится понятным вам способом, в доверенном месте, там, где удобнее всего.
Прежде, чем я расскажу о плюсах и минусах этого подхода, хочу описать, каким образом и где хранятся мои пароли.&lt;/p&gt;

&lt;h2 id=&quot;рецепт&quot;&gt;Рецепт&lt;/h2&gt;

&lt;p&gt;Так как я активный пользователь ОС Linux и Android, моё решение будет заточено в первую очередь под мои потребности и ограничения.&lt;/p&gt;

&lt;h3 id=&quot;выбор-программного-обеспечения&quot;&gt;Выбор программного обеспечения&lt;/h3&gt;

&lt;p&gt;Для пользователей Windows стандартом является официальный клиент &lt;a href=&quot;https://keepass.info/&quot;&gt;KeePass&lt;/a&gt;,
который имеет тонну &lt;a href=&quot;https://keepass.info/plugins.html&quot;&gt;плагинов и дополнений&lt;/a&gt;.
Его тоже &lt;a href=&quot;https://keepass.info/help/v2/setup.html#mono&quot;&gt;можно&lt;/a&gt; запустить на Linux и Mac OS, но у меня это выглядело весьма уродливо.
Поэтому мой выбор пал на &lt;a href=&quot;https://keepassxc.org/&quot;&gt;KeePassXC&lt;/a&gt;.
Он является &lt;acronym title=&quot;С английского fork (дословно англ. 'вилка') использование одного проекта в качестве основы другого&quot;&gt;форком&lt;/acronym&gt;
&lt;a href=&quot;https://www.keepassx.org/&quot;&gt;KeePassX&lt;/a&gt; (буквы “C” нет)
с внушительным списком дополнительных возможностей.&lt;/p&gt;

&lt;p&gt;В качестве клиента для Android выбор пал на &lt;a href=&quot;https://play.google.com/store/apps/details?id=keepass2android.keepass2android&amp;amp;hl=ru&quot;&gt;Keepass2Android&lt;/a&gt;.
Для iOS есть какой-то &lt;a href=&quot;https://apps.apple.com/ru/app/keepass-touch/id966759076&quot;&gt;KeePass Touch&lt;/a&gt;, который тоже умеет синхронизироваться с Dropbox, но я им не пользовался,
поэтому и осознанно порекомендовать ничего не могу.&lt;/p&gt;

&lt;p&gt;В качестве хранилища использую &lt;a href=&quot;https://www.dropbox.com/&quot;&gt;Dropbox&lt;/a&gt;, потому что для Linux есть клиент,
который синхронизирует файлы с теми, что лежат на компе,
что дает возможность пользоваться одной базой на нескольких устройствах.
Также &lt;a href=&quot;https://play.google.com/store/apps/details?id=keepass2android.keepass2android&amp;amp;hl=ru&quot;&gt;Keepass2Android&lt;/a&gt; умеет работать с хранилищем почти напрямую.&lt;/p&gt;

&lt;p&gt;Если совсем кратко:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://keepass.info/&quot;&gt;KeePass&lt;/a&gt; или &lt;a href=&quot;https://keepassxc.org/&quot;&gt;KeePassXC&lt;/a&gt; для ПК.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://play.google.com/store/apps/details?id=keepass2android.keepass2android&amp;amp;hl=ru&quot;&gt;Keepass2Android&lt;/a&gt; или &lt;a href=&quot;https://apps.apple.com/ru/app/keepass-touch/id966759076&quot;&gt;KeePass Touch&lt;/a&gt; для мобильных устройств.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.dropbox.com/&quot;&gt;Dropbox&lt;/a&gt; как хранилище.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;ложка-дегтя&quot;&gt;Ложка дегтя&lt;/h3&gt;

&lt;p&gt;При всей красоте этого варианта, он не лишен недостатков:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Один пароль от всего является как преимуществом, так и недостатком.
Стоит злоумышленнику стащить мастер-пароль, &lt;strong&gt;всё&lt;/strong&gt;, что вы так бережно хранили, окажется под угрозой.
Например это значит, что в публичных местах, типа кафе, библиотек и торговых центров, можно засветить пароль на камеру.&lt;/li&gt;
  &lt;li&gt;Хранение базы в Dropbox может казаться хорошей идеей, если бы не одно НО: он хранит старые версии файла в течение 30 дней.
(насколько я знаю, почистить историю файла можно только при удалении самого файла… не очень удобно)
Это значит, что менять мастер-пароль чаще, чем раз в 30 дней – не есть хорошая идея.
Самое лучшее – хранить файл на своем сервере, что позволить и даже осилить может не каждый.&lt;/li&gt;
&lt;/ul&gt;
&lt;details class=&quot;spoiler&quot;&gt;&lt;summary class=&quot;spoiler-title&quot;&gt;Журнал версий моего файла с паролями&lt;/summary&gt;&lt;div class=&quot;spoiler-body&quot;&gt;
&lt;figure&gt;&lt;img src=&quot;./file-history.png&quot; alt=&quot;Журнал версий файла с паролями&quot; /&gt;&lt;/figure&gt;
&lt;/div&gt;&lt;/details&gt;
&lt;ul&gt;
  &lt;li&gt;Помимо этого, нужно помнить как минимум 2 пароля: от Dropbox и от хранилища.
И они должны быть достаточно сложными, надежными и &lt;strong&gt;разными&lt;/strong&gt;.
(а еще нужно помнить пароль от телефона, пинкоды от всех банковских карт и т.д.)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Приходится мириться с этими условностями, чтобы, получив достаточную безопасность, не потерять и удобство использования.
До идеала в этой схеме не хватает выделенного доверенного хранилища и регулярной смены мастер-пароля.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;em&gt;Безопасно ли это?&lt;/em&gt; Из всех вариантов, этот самый лучший.
Его может осилить любой, кто хоть как-то владеет компьютером и смартфоном.
При этом данные принадлежат только вам… пока вы сохраняете бдительность и осторожность.&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;Надежно ли это?&lt;/em&gt; Файл с паролями будет храниться на всех устройствах, куда вы подключите Dropbox, а так же в самом Dropbox’e.
Бо́льшую надежность, я думаю, не предоставит никто.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;бочка-мёда&quot;&gt;Бочка мёда&lt;/h3&gt;

&lt;p&gt;Но минусы очень хорошо перевешиваются плюсами:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Подобные программы разработаны быть устойчивыми к вирусам. Из браузера стащить пароль может любое расширение.
Из программы – только человек.&lt;/li&gt;
  &lt;li&gt;Если все правильно настроить, программа самостоятельно заблокирует хранилище с паролями в течение N минут бездействия.
Это защищает от случаев “отошел от компа, но забыл заблокировать”.&lt;/li&gt;
  &lt;li&gt;В случае приложения для Android, есть возможность разблокировать хранилище последними несколькими символами пароля.
Очень удобно и достаточно безопасно – дается всего одна попытка и наступает полная блокировка, где нужно ввести кодовую фразу целиком.&lt;/li&gt;
  &lt;li&gt;Еще раз про это приложение: оно позволяет вводить пароли из встроенной в него клавиатурой.
Это значит, что пароль не окажется в буфере обмена и его невозможно будет стащить таким образом.&lt;/li&gt;
  &lt;li&gt;Приложения для ПК имеют функцию автоввода: ставишь курсор на поле с логином, открываешь приложение,
находишь нужную запись, жмешь комбинацию клавиш (обычно &lt;kbd&gt;Ctrl+V&lt;/kbd&gt;) и вуоля – все данные введены за вас.
Если последовательность действий для сайта отличается от классической, то ее можно настроить прямо в записи.&lt;/li&gt;
  &lt;li&gt;Если пароль скопировать, то буфер обмена автоматически будет очищен через определенный промежуток времени.&lt;/li&gt;
  &lt;li&gt;Возможно сохранить секретное слово для двух-этапной аутентификации (TOTP, Steam Guard) и копировать его прямиком из менеджера паролей.
(&lt;kbd&gt;Ctrl+T&lt;/kbd&gt; в случае &lt;a href=&quot;https://keepassxc.org/&quot;&gt;KeePassXC&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Встроенные возможности:
    &lt;ul&gt;
      &lt;li&gt;Генератор паролей;&lt;/li&gt;
      &lt;li&gt;Примечания и дополнительные атрибуты;&lt;/li&gt;
      &lt;li&gt;Ссылка на сайт с возможностью открыть прямо из программы;&lt;/li&gt;
      &lt;li&gt;Вложения в виде файлов;&lt;/li&gt;
      &lt;li&gt;Значок к записи (KeePassXC может скачивать значок с сайта, а с &lt;a href=&quot;https://keepassxc.org/blog/2019-10-26-2.5.0-released/&quot;&gt;последним обновлением&lt;/a&gt; для нескольких записей);&lt;/li&gt;
      &lt;li&gt;История изменений и корзина;&lt;/li&gt;
      &lt;li&gt;Напоминание о необходимости изменить пароль;&lt;/li&gt;
      &lt;li&gt;Вложенные папки;&lt;/li&gt;
      &lt;li&gt;И много всего еще…&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;Вывод очевиден: &lt;strong&gt;храните свои пароли правильно&lt;/strong&gt;.
Никто из вас не заинтересован быть взломанными,
поэтому воспользуйтесь любым безопасным и надежным способом хранения ваших данных.
Я надеюсь, эта статья дала понимание существующей проблемы и её решения,
и вы прислушаетесь к моим советам вам же во благо :blush:&lt;/p&gt;</content><author><name>Vitaly Zaslavsky</name><email>vtvz@pm.me</email></author><category term="Программы" /><category term="Сервисы" /><category term="Безопасность" /><summary type="html">Начало 07.10.2019. Статья обещает быть обширной. Моим первым паролем был “хахаха”. Не даром в ВК меня быстренько взломали. Затем у меня был один пароль на все случаи жизни. Инцидентов не было, но метод далек от идеального. Стоит узнать один пароль, как учетные записи других сервисов окажутся под угрозой. Следующим шагом был пароль, состоящий из двух частей: общим префиксом и доменным именем сайта. Могло это выглядеть примерно так: “МойСуперМощныйПароль123.vk.com”. Это все ещё очень плохо. Я рос. Росла и моя паранойя. Сейчас у меня для каждого отдельного сайта или приложения свой уникальный, неповторимый, устойчивый к атакам пароль. В этой статье я расскажу, как правильно хранить свои пароли, чтобы было удобно, и безопасность не страдала.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://vtvz.me/assets/images/logo-black.png" /><media:content medium="image" url="https://vtvz.me/assets/images/logo-black.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry xml:lang="ru"><title type="html">Платить или не платить. Или зачем нужны стриминговые платформы</title><link href="https://vtvz.me/blog/why-audio-streaming-platforms/" rel="alternate" type="text/html" title="Платить или не платить. Или зачем нужны стриминговые платформы" /><published>2019-10-07T00:00:00+03:00</published><updated>2019-10-07T00:00:00+03:00</updated><id>https://vtvz.me/blog/why-audio-streaming-platforms</id><content type="html" xml:base="https://vtvz.me/blog/why-audio-streaming-platforms/">&lt;p&gt;Как-то исторически сложилось, что после того, как в ВК стали активно внедрять меры по защите авторских прав, 
платных подписок и прочие ограничения на прослушиваине музыки, я перешел на &lt;a href=&quot;https://music.yandex.ru/&quot;&gt;Яндекс.Музыку&lt;/a&gt;,
в качестве основного источника музыкального дофамина.&lt;/p&gt;

&lt;p&gt;До этого были активные попытки использовать &lt;a href=&quot;https://play.google.com/music&quot;&gt;Google Music&lt;/a&gt;, но приложение оказалось тяжелым (в техническом плане),
запутанным и не удобным для использования.&lt;/p&gt;

&lt;p&gt;Через какое-то время была куплена подписка за 99р. в месяц, потом полноценная в &lt;nobr&gt;169р/м&lt;/nobr&gt;, 
а в итоге семейная за &lt;nobr&gt;300р/м&lt;/nobr&gt; на 4 человека.&lt;/p&gt;

&lt;p&gt;Сравнение музыкальных сервисов будет в следующей статье.
А в этой хочу рассказать, почему лучше выбрать один из них, чем пользоваться ВК, и почему они стоят своих денег.&lt;/p&gt;

&lt;!--cut--&gt;
&lt;h2 id=&quot;всех-людей-можно-разделить-на&quot;&gt;Всех людей можно разделить на…&lt;/h2&gt;

&lt;p&gt;Метод, который работает. Через разделение людей на категории можно выявить плюсы и минусы различных подходов. Так вот. Всех людей можно разделить на…&lt;/p&gt;

&lt;h3 id=&quot;пираты&quot;&gt;Пираты!&lt;/h3&gt;

&lt;p&gt;Огромный пласт людей, которых можно охарактеризовать, как “старые пираты”. 
Вся их музыка хранится на компе, аккуратно (или нет) распихана по папочкам, 
избранные треки скачиваются на телефон для дальнейшего прослушивания до дыр.&lt;/p&gt;

&lt;p&gt;Библиотеки таких меломанов могут занимать десятки, 
а то и сотни гигабайт дискового пространства полностью скачанными дискографиями любимых исполнителей с какого-нибудь торрента,
которые обновляются достаточно редко, а любимые треки перестают быть любимыми, потому что от них уже тошнит.
Новые исполнители появляются достаточно редко и обычно в результате случайно найденных в ВК треков или по рекомендации друзей.
Этот подход мне напоминает времена, когда на телефонах с ИК портом было всего 19мб памяти. 
Ты скачиваешь всего один трек в течение полу часа, а потом в течение месяца случаешь одно и то же.&lt;/p&gt;

&lt;p&gt;Недостатки такого подхода очевидны – библиотека треков устаревает, хранится обычно в одном месте, 
которое может исчезнуть в результате случайного технического сбоя,
пополнения нет, о рекомендациях и упоминать не стоит.&lt;/p&gt;

&lt;p&gt;Плюсы: оно бесплатно. И идеально подходит для параноиков, которые не сидят в обычных соц. сетях, а весь трафик пропускают через Tor.&lt;/p&gt;

&lt;h3 id=&quot;халявщики&quot;&gt;Халявщики&lt;/h3&gt;

&lt;p&gt;Этот тип отличается от пиратов тем, что в большинстве случаев они используют что-то бесплатное, но официально доступное.
Не скажу, что это неправильно, и людей этого типа большинство. Такие люди пользуются бесплатными возможностями музыкальных сервисов 
и готовы мириться с теми ограничениями, которые накладывает на них “халява”.&lt;/p&gt;

&lt;p&gt;Такими неудобствами являются ограничения на количество переключений на следующий трек в час (обычно около шести),
невозможность прослушать конкретного автора или композицию, ограниченное время прослушивание в фоновом режиме,
ограничение по качеству звука, реклама и отсутствие возможности слушать оффлайн.
Обычно это применимо только к мобильным и десктопным приложениям.
Прослушивание же онлайн на сайте у большинства сервисов не накладывает практически никаких ограничений.&lt;/p&gt;

&lt;p&gt;Почти все халявщики являются псевдо-пиратами. В основном они готовы терпеть неудобства,
но иногда прибегают к тем же торрентам, пиратским сайтам 
и различного рода расширениям и приложениям для скачивания треков.
Откровенно говоря, даже не-халявщикам приходится это делать, потому что:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Поставить трек на вызов нельзя;&lt;/li&gt;
  &lt;li&gt;Слушать музыку оффлайн без телефона не всегда получится;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Также у некоторых сервисов есть ломанные клиенты (у Яндекс.Музыки, например),
которые снимают все ограничения бесплатного тарифа.
И в этот момент грань между пиратами и халявщиками начинает стираться.&lt;/p&gt;

&lt;details class=&quot;spoiler&quot;&gt;&lt;summary class=&quot;spoiler-title&quot;&gt;Кстати&lt;/summary&gt;&lt;div class=&quot;spoiler-body&quot;&gt;
&lt;p&gt;Хоть я и плачу́ денежку за музыку, сам иногда пользуюсь вот &lt;a href=&quot;http://ytdl-org.github.io/youtube-dl/&quot;&gt;этой мощной тулзой&lt;/a&gt;,
которая умеет скачивать не только видео с Youtube, но и целиком альбомы и плейлисты с Яндекс.Музыки.&lt;/p&gt;

&lt;p&gt;Иногда это бывает просто необходимо :expressionless:&lt;/p&gt;
&lt;/div&gt;&lt;/details&gt;

&lt;h3 id=&quot;остальные&quot;&gt;Остальные&lt;/h3&gt;

&lt;p&gt;Тот небольшой процент людей, которые готовы платить деньги за то, что им нравится. Но об этом потом.&lt;/p&gt;

&lt;h2 id=&quot;почему-вконтакте&quot;&gt;Почему ВКонтакте?&lt;/h2&gt;

&lt;p&gt;Дурову нужно отдать должное – он создал по-настоящему удобную и хорошо спроектированную социальную сеть.
Да, она не лишена недостатков, но в ней есть все, что нужно. И нет того мусора, которым полон Facebook.&lt;/p&gt;

&lt;p&gt;В ВК есть то, чего нет нигде: авторские треки, уникальные композиции, всяческие ремиксы и т.д.
Если что-то где-то появится, то это почти обязательно попадет в ВК через несколько минут после релиза.
Платные треки с &lt;a href=&quot;https://bandcamp.com/&quot;&gt;Bandcamp&lt;/a&gt; можно послушать за бесплатно.
Удобно обмениваться треками со своими друзьями (соц. сеть же!).
И с недавних пор там появились нормальные альбомы с обложками и п.р.&lt;/p&gt;

&lt;p&gt;Поиск треков осуществляется через друзей или через паблики, посвященные какому-то определенному направлению.&lt;/p&gt;

&lt;p&gt;И пока все было бесплатно, это был 100% выбор большинства русских, в том числе и меня.
Но Дурова не стало и в ВК настали смутные времена. И следующий вопрос стал как никогда актуален…&lt;/p&gt;

&lt;h2 id=&quot;почему-не-вконтакте&quot;&gt;Почему не ВКонтакте?&lt;/h2&gt;

&lt;p&gt;Давайте будем честными… Музыка в ВК – сплошная свалка.
Если попытаться провести поиск по автору, можно много чего обнаружить:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Десятки повторяющихся треков…&lt;/li&gt;
  &lt;li&gt;И их ремиксы;&lt;/li&gt;
  &lt;li&gt;А также треки не этого автора;&lt;/li&gt;
  &lt;li&gt;Нужный трек может быть на второй или третьей странице поиска.&lt;/li&gt;
  &lt;li&gt;Треки малопопулярных авторов с названием, состоящим из популярных английских слов найти сложно, 
потому что на выдаче все, что угодно, но не то, что нужно. А &lt;a href=&quot;https://music.yandex.ru/album/810866/track/7735656&quot;&gt;некоторых&lt;/a&gt; треков и вовсе нет.&lt;/li&gt;
  &lt;li&gt;Проблема с группами с пересекающимися названиями. Для примера: есть группа &lt;a href=&quot;https://ru.wikipedia.org/wiki/Red_(%D0%B3%D1%80%D1%83%D0%BF%D0%BF%D0%B0)&quot;&gt;Red&lt;/a&gt;, но ты ее не найдешь, потому что ВК выдаст “&lt;em&gt;Red&lt;/em&gt; Hot Chili Peppers”.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Структуры никакой: ни разбиения по авторам, ни тем более по альбомам.
И только фан-группы энтузиасты берут на себя эту ответственность и наводят более менее порядок.&lt;/p&gt;

&lt;p&gt;В определенный момент треки начали пачками удаляться из списков за нарушение авторских прав.
И вот тут наступили действительно тяжелые времена.&lt;/p&gt;

&lt;p&gt;Это было раньше, в тот момент, когда я перестал использовать ВК для музыки. 
Сейчас вроде лучше, как я вижу. Команда ВКонтакте очень постаралась привести порядок в этой куче мусора и не мусора,
а также заключить контракты с лейблами, чтобы не приходилось удалять все подряд.&lt;/p&gt;

&lt;p&gt;Но комон! Стоимость платной подписки ровно такая же, как и полная подписка в &lt;a href=&quot;https://music.yandex.ru/&quot;&gt;Яндекс.Музыке&lt;/a&gt; и &lt;a href=&quot;https://www.deezer.com/&quot;&gt;Deezer&lt;/a&gt;.
Веских причин использовать ВК у меня нет. Аргумент “у меня в ВК вся музыка” – не аргумент,
потому что почти везде есть либо встроенная функция импорта, либо сторонние инструменты,
которые могут перегнать список треков в плейлист.&lt;/p&gt;

&lt;p&gt;Система рекомендаций ВК работает очень слабо. Если вообще работает.
Решил попробовать “Специально для вас” – советует всякий треш, который я даже в фоне слушать не смогу.
В “Новинках” Артур Пирожков, в “Новых Альбомах” 4 из 5-ти с ненормативной лексикой и так далее…&lt;/p&gt;

&lt;p&gt;Я думаю, вы меня поняли. ВК не то место, куда я бы стал вкладывать свои средства.&lt;/p&gt;

&lt;h2 id=&quot;что-если-не-вконтакте&quot;&gt;Что, если не ВКонтакте?&lt;/h2&gt;

&lt;p&gt;Благо монополии тут нет и выбор достаточно велик:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.spotify.com/&quot;&gt;Spotify&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.deezer.com/&quot;&gt;Deezer&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://music.yandex.ru/&quot;&gt;Яндекс.Музыка&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://play.google.com/music&quot;&gt;Google Play Music&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.apple.com/ru/itunes/&quot;&gt;Apple iTunes&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://music.youtube.com/&quot;&gt;YouTube Music&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://soundcloud.com/&quot;&gt;SoundCloud&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://tidal.com/&quot;&gt;Tidal&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://zvuk.com/&quot;&gt;Zvooq&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Порядок сугубо произвольный и не отражает сути и приоритета.&lt;/p&gt;

&lt;h2 id=&quot;но-что-мне-выбрать&quot;&gt;Но что мне выбрать?&lt;/h2&gt;

&lt;p&gt;Об этом я расскажу в следующей статье, где подробно опишу опыт использования некоторых сервисов из списка выше,
и почему я выбрал именно &lt;a href=&quot;https://music.yandex.ru/&quot;&gt;Яндекс&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;нужно-ли-мне-что-то-выбирать&quot;&gt;Нужно ли мне что-то выбирать?&lt;/h2&gt;

&lt;p&gt;Нет. Но я настоятельно рекомендую выбрать продукт, который c самого зачатия затачивался под музыку.
К тому же после того, как в ВК ввели платные подписки, условия всех стриминговых платформ почти уравнялись,
и агрументов в пользу ВК почти не осталось, кроме тесной интеграции музыки с самой соц. сетью.&lt;/p&gt;

&lt;h2 id=&quot;зачем-платить-деньги-если-можно-и-бесплатно&quot;&gt;Зачем платить деньги, если можно и бесплатно?&lt;/h2&gt;

&lt;p&gt;На самом деле не нужно. Многими плюшками можно пользоваться не заплатив ни копейки. Это за вас сделает вездесущая реклама.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;что-то-вроде-вывода&quot;&gt;Что-то вроде вывода&lt;/h2&gt;

&lt;p&gt;Необходимость в платной подписке обусловливается только Вашими потребностями и возможностями.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Нужна ли Вам музыка вне компьютера или оффлайн?&lt;/li&gt;
  &lt;li&gt;Есть ли у Вас возможность выделять 100-300 рублей на подписку?
&lt;small&gt;(если Вы можете позволить себе ходить раз в месяц в кафе, значит есть)&lt;/small&gt;&lt;/li&gt;
  &lt;li&gt;Нуждаетесь ли Вы в каком-либо механизме рекомендаций или готовых подборок?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;В моем случае все ответы утвердительные.&lt;/p&gt;

&lt;p&gt;300 рублей – это тоже деньги, не могу сказать, что это мелочь.
Но благодаря этому 4 человека (могло быть и 6, но Яндекс жадина)
имеют доступ к большому музыкальному банку. Это 75 рублей с человека. 
Это меньше, чем заказать такси или купить 2 литра бензина,
и чуть больше, чем съездить на работу и обратно на автобусе.&lt;/p&gt;

&lt;p&gt;А пользу я и члены моей семьи ощущем каждый день по дороге с работы и обратно, на работе или в пути в другой город.&lt;/p&gt;

&lt;p&gt;В любом случае, любой из сервисов из списка предоставляет бесплатный (или очень дешевый) период без ограничений.
Попробуйте. Возможно понравится и Вам :blush:&lt;/p&gt;</content><author><name>Vitaly Zaslavsky</name><email>vtvz@pm.me</email></author><category term="Музыка" /><category term="Сервисы" /><summary type="html">Как-то исторически сложилось, что после того, как в ВК стали активно внедрять меры по защите авторских прав, платных подписок и прочие ограничения на прослушиваине музыки, я перешел на Яндекс.Музыку, в качестве основного источника музыкального дофамина. До этого были активные попытки использовать Google Music, но приложение оказалось тяжелым (в техническом плане), запутанным и не удобным для использования. Через какое-то время была куплена подписка за 99р. в месяц, потом полноценная в 169р/м, а в итоге семейная за 300р/м на 4 человека. Сравнение музыкальных сервисов будет в следующей статье. А в этой хочу рассказать, почему лучше выбрать один из них, чем пользоваться ВК, и почему они стоят своих денег.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://vtvz.me/assets/images/logo-black.png" /><media:content medium="image" url="https://vtvz.me/assets/images/logo-black.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry xml:lang="ru"><title type="html">Jekyll Spoiler Plugin. Куда и как прятать код</title><link href="https://vtvz.me/blog/jekyll-spoiler-plugin/" rel="alternate" type="text/html" title="Jekyll Spoiler Plugin. Куда и как прятать код" /><published>2019-03-08T00:00:00+03:00</published><updated>2019-03-08T00:00:00+03:00</updated><id>https://vtvz.me/blog/jekyll-spoiler-plugin</id><content type="html" xml:base="https://vtvz.me/blog/jekyll-spoiler-plugin/">&lt;p&gt;Когда писал &lt;a href=&quot;/blog/html-to-mysql/&quot;&gt;предыдущую статью&lt;/a&gt;, столкнулся с одной простой проблемой: большие куски кода занимали больше места, чем сам текст.&lt;/p&gt;

&lt;p&gt;Поиск готового решения для спойлеров привел меня на вот &lt;a href=&quot;https://burrowl.com/blog/2015/05/23/spoiler-block/&quot;&gt;эту страничку&lt;/a&gt;.
Решение простое и гениальное, но имело один большой недостаток: текст внутри спойлера не форматировался.&lt;/p&gt;

&lt;p&gt;Свое решение я опишу в этой статье.&lt;/p&gt;

&lt;!--cut--&gt;
&lt;details class=&quot;spoiler&quot;&gt;&lt;summary class=&quot;spoiler-title&quot;&gt;TL;DR. Для тех, кому лень читать целиком&lt;/summary&gt;&lt;div class=&quot;spoiler-body&quot;&gt;
&lt;p&gt;Это нужно положить в папку &lt;code class=&quot;highlighter-rouge&quot;&gt;_plugins&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Jekyll&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;SpoilerBlock&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Liquid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Block&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;initialize&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tag_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;markup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tokens&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;super&lt;/span&gt;
      &lt;span class=&quot;vi&quot;&gt;@summary&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;markup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;strip&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;site&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;registers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:site&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;converter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;site&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;find_converter_instance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Jekyll&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Converters&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Markdown&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

      &lt;span class=&quot;n&quot;&gt;output&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&amp;lt;details class=&quot;spoiler&quot;&amp;gt;'&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;output&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&amp;lt;summary class=&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;spoiler-title&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;vi&quot;&gt;@summary&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;empty?&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Открыть'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@summary&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;lt;/summary&amp;gt;&quot;&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;output&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&amp;lt;div class=&quot;spoiler-body&quot;&amp;gt;'&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;output&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;converter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;convert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;output&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&amp;lt;/div&amp;gt;'&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;output&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&amp;lt;/details&amp;gt;'&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;no&quot;&gt;Liquid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Template&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;register_tag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'spoiler'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Jekyll&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;SpoilerBlock&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;И использовать в постах так:&lt;/p&gt;

&lt;div class=&quot;language-markdown highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;{% spoiler Заголовок спойлера %}
&lt;span class=&quot;p&quot;&gt;```&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;yaml
&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;some&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;string&quot;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;```&lt;/span&gt;
{% endspoiler %}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;/div&gt;&lt;/details&gt;

&lt;div class=&quot;alert alert-danger&quot; role=&quot;alert&quot;&gt;
    &lt;p&gt;&lt;b&gt;В Github Pages это работать не будет!&lt;/b&gt;&lt;/p&gt;
    &lt;p&gt;Любые плагины и дополнения работают только при самостоятельной сборке проекта (например, на Gitlab'е)&lt;/p&gt;
&lt;/div&gt;

&lt;h2 id=&quot;проблема&quot;&gt;Проблема&lt;/h2&gt;

&lt;p&gt;Если любой код поместить внутрь HTML тега, то он будет отрисован как есть. То есть вот этот кусок кода:&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;details&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;spoiler&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;summary&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;spoiler-title&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Заголовок спойлера&lt;span class=&quot;nt&quot;&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;spoiler-body&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
**Тут должен быть жирный текст**

```
А это *должен* быть кусок кода
```
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/details&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Выдаст вот такой результат:&lt;/p&gt;

&lt;details class=&quot;spoiler&quot;&gt;
    &lt;summary class=&quot;spoiler-title&quot;&gt;Заголовок спойлера&lt;/summary&gt;
    &lt;div class=&quot;spoiler-body&quot;&gt;
    **Тут должен быть жирный текст**
    
    ```
    А это *должен* быть кусок кода
    ```
    &lt;/div&gt;
&lt;/details&gt;

&lt;p&gt;Мы можем заставить Jekyll парсить код внутри HTML элементов:&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# _config.yml&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;kramdown&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;parse_block_html&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Но результат сильно лучше не станет:&lt;/p&gt;

&lt;figure class=&quot;frame&quot;&gt;
  &lt;img src=&quot;broken-html.png&quot; alt=&quot;Поехавшая разметка&quot; /&gt;
&lt;/figure&gt;

&lt;h2 id=&quot;решение&quot;&gt;Решение&lt;/h2&gt;

&lt;p&gt;Решение напрашивается само собой: нужно содержание спойлера индивидуально прогонять через конвертёр.&lt;/p&gt;

&lt;p&gt;Когда-то я читал спецификацию по Ruby, но для меня он до сей поры остается языком инопланетян.
(Говорят, что Ruby очень популярен в Японии. Кажется, это все объясняет).
Я даже кажется &lt;a href=&quot;https://github.com/jekyll/jekyll/blob/master/lib/jekyll/filters.rb#L16&quot;&gt;нашел&lt;/a&gt; используемый в Liquid фильтр для конвертации. Но так и не смог его победить.&lt;/p&gt;

&lt;p&gt;В итоге после короткого гугления нашел вот этот рецепт:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;site&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;registers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:site&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;converter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;site&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;find_converter_instance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Jekyll&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Converters&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Markdown&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;converter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;convert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Остается все это дело собрать воедино вот так:&lt;/p&gt;

&lt;details class=&quot;spoiler&quot;&gt;&lt;summary class=&quot;spoiler-title&quot;&gt;Все то же, что и в TL;DR выше&lt;/summary&gt;&lt;div class=&quot;spoiler-body&quot;&gt;
&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Jekyll&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;SpoilerBlock&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Liquid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Block&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;initialize&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tag_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;markup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tokens&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;super&lt;/span&gt;
      &lt;span class=&quot;vi&quot;&gt;@summary&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;markup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;strip&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;site&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;registers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:site&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;converter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;site&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;find_converter_instance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Jekyll&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Converters&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Markdown&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

      &lt;span class=&quot;n&quot;&gt;output&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&amp;lt;details class=&quot;spoiler&quot;&amp;gt;'&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;output&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&amp;lt;summary class=&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;spoiler-title&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;vi&quot;&gt;@summary&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;empty?&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Открыть'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@summary&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;lt;/summary&amp;gt;&quot;&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;output&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&amp;lt;div class=&quot;spoiler-body&quot;&amp;gt;'&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;output&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;converter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;convert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;output&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&amp;lt;/div&amp;gt;'&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;output&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&amp;lt;/details&amp;gt;'&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;no&quot;&gt;Liquid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Template&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;register_tag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'spoiler'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Jekyll&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;SpoilerBlock&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;/div&gt;&lt;/details&gt;

&lt;p&gt;Положить в папку &lt;code class=&quot;highlighter-rouge&quot;&gt;_plugins&lt;/code&gt;. И далее можно использовать в любом Markdown документе вот так:&lt;/p&gt;

&lt;div class=&quot;language-markdown highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;{% spoiler Заголовок спойлера %}
&lt;span class=&quot;p&quot;&gt;```&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;yaml
&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;some&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;string&quot;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;```&lt;/span&gt;
{% endspoiler %}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Вот с таким вот результатом:&lt;/p&gt;

&lt;details class=&quot;spoiler&quot;&gt;&lt;summary class=&quot;spoiler-title&quot;&gt;Заголовок спойлера&lt;/summary&gt;&lt;div class=&quot;spoiler-body&quot;&gt;
&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;some&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;string&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;/div&gt;&lt;/details&gt;

&lt;p&gt;Используйте на здоровье :grin:&lt;/p&gt;</content><author><name>Vitaly Zaslavsky</name><email>vtvz@pm.me</email></author><category term="Веб-разработка" /><category term="Jekyll" /><summary type="html">Когда писал предыдущую статью, столкнулся с одной простой проблемой: большие куски кода занимали больше места, чем сам текст. Поиск готового решения для спойлеров привел меня на вот эту страничку. Решение простое и гениальное, но имело один большой недостаток: текст внутри спойлера не форматировался. Свое решение я опишу в этой статье.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://vtvz.me/assets/images/logo-black.png" /><media:content medium="image" url="https://vtvz.me/assets/images/logo-black.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry></feed>